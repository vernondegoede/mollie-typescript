/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetPaymentLinkRequest = {
  /**
   * Provide the ID of the item you want to perform this operation on.
   */
  id: string;
  /**
   * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting the `testmode` query parameter to `true`.
   *
   * @remarks
   *
   * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
   */
  testmode?: boolean | null | undefined;
};

/**
 * The amount of the payment link. If no amount is provided initially, the customer will be prompted to enter an amount.
 */
export type GetPaymentLinkAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetPaymentLinkSelf = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
 */
export type PaymentLink = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetPaymentLinkDocumentation = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type GetPaymentLinkLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: GetPaymentLinkSelf | undefined;
  /**
   * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
   */
  paymentLink?: PaymentLink | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: GetPaymentLinkDocumentation | undefined;
};

/**
 * The payment link object.
 */
export type GetPaymentLinkResponseBody = {
  /**
   * Indicates the response contains a payment link object. Will always contain the string `payment-link` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this payment link. Example: `pl_4Y0eZitmBnQ6IDoMqZQKh`.
   */
  id?: string | undefined;
  /**
   * Whether this entity was created in live mode or in test mode.
   *
   * @remarks
   *
   * Possible values: `live` `test`
   */
  mode?: string | undefined;
  /**
   * A short description of the payment link. The description is visible in the Dashboard and will be shown on the customer's bank or card statement when possible.
   */
  description?: string | undefined;
  /**
   * The amount of the payment link. If no amount is provided initially, the customer will be prompted to enter an amount.
   */
  amount?: GetPaymentLinkAmount | null | undefined;
  /**
   * Whether the payment link is archived. Customers will not be able to complete payments on archived payment links.
   */
  archived?: boolean | undefined;
  /**
   * The URL your customer will be redirected to after completing the payment process. If no redirect URL is provided, the customer will be shown a generic message after completing the payment.
   */
  redirectUrl?: string | null | undefined;
  /**
   * The webhook URL where we will send payment status updates to.
   *
   * @remarks
   *
   * The webhookUrl is optional, but without a webhook you will miss out on important status changes to any payments resulting from the payment link.
   *
   * The webhookUrl must be reachable from Mollie's point of view, so you cannot use `localhost`. If you want to use webhook during development on `localhost`, you must use a tool like ngrok to have the webhooks delivered to your local machine.
   */
  webhookUrl?: string | null | undefined;
  /**
   * The unique identifier of the payment this payment link was created for. For example: `tr_7UhSN1zuXS`. The full payment object can be retrieved via the payment URL in the `_links` object.
   */
  paymentId?: string | undefined;
  /**
   * The identifier referring to the [profile](get-profile) this entity belongs to.
   *
   * @remarks
   *
   * Most API credentials are linked to a single profile. In these cases the `profileId` can be omitted in the creation request. For organization-level credentials such as OAuth access tokens however, the `profileId` parameter is required.
   */
  profileId?: string | null | undefined;
  /**
   * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  createdAt?: string | undefined;
  /**
   * The date and time the payment link became paid, in ISO 8601 format.
   */
  paidAt?: string | null | undefined;
  /**
   * The date and time the payment link is set to expire, in ISO 8601 format. If no expiry date was provided up front, the payment link will not expire automatically.
   */
  expiresAt?: string | null | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: GetPaymentLinkLinks | undefined;
};

/** @internal */
export const GetPaymentLinkRequest$inboundSchema: z.ZodType<
  GetPaymentLinkRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  testmode: z.nullable(z.boolean().default(false)),
});

/** @internal */
export type GetPaymentLinkRequest$Outbound = {
  id: string;
  testmode: boolean | null;
};

/** @internal */
export const GetPaymentLinkRequest$outboundSchema: z.ZodType<
  GetPaymentLinkRequest$Outbound,
  z.ZodTypeDef,
  GetPaymentLinkRequest
> = z.object({
  id: z.string(),
  testmode: z.nullable(z.boolean().default(false)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinkRequest$ {
  /** @deprecated use `GetPaymentLinkRequest$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinkRequest$inboundSchema;
  /** @deprecated use `GetPaymentLinkRequest$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinkRequest$outboundSchema;
  /** @deprecated use `GetPaymentLinkRequest$Outbound` instead. */
  export type Outbound = GetPaymentLinkRequest$Outbound;
}

/** @internal */
export const GetPaymentLinkAmount$inboundSchema: z.ZodType<
  GetPaymentLinkAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type GetPaymentLinkAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const GetPaymentLinkAmount$outboundSchema: z.ZodType<
  GetPaymentLinkAmount$Outbound,
  z.ZodTypeDef,
  GetPaymentLinkAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinkAmount$ {
  /** @deprecated use `GetPaymentLinkAmount$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinkAmount$inboundSchema;
  /** @deprecated use `GetPaymentLinkAmount$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinkAmount$outboundSchema;
  /** @deprecated use `GetPaymentLinkAmount$Outbound` instead. */
  export type Outbound = GetPaymentLinkAmount$Outbound;
}

/** @internal */
export const GetPaymentLinkSelf$inboundSchema: z.ZodType<
  GetPaymentLinkSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetPaymentLinkSelf$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetPaymentLinkSelf$outboundSchema: z.ZodType<
  GetPaymentLinkSelf$Outbound,
  z.ZodTypeDef,
  GetPaymentLinkSelf
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinkSelf$ {
  /** @deprecated use `GetPaymentLinkSelf$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinkSelf$inboundSchema;
  /** @deprecated use `GetPaymentLinkSelf$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinkSelf$outboundSchema;
  /** @deprecated use `GetPaymentLinkSelf$Outbound` instead. */
  export type Outbound = GetPaymentLinkSelf$Outbound;
}

/** @internal */
export const PaymentLink$inboundSchema: z.ZodType<
  PaymentLink,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type PaymentLink$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const PaymentLink$outboundSchema: z.ZodType<
  PaymentLink$Outbound,
  z.ZodTypeDef,
  PaymentLink
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentLink$ {
  /** @deprecated use `PaymentLink$inboundSchema` instead. */
  export const inboundSchema = PaymentLink$inboundSchema;
  /** @deprecated use `PaymentLink$outboundSchema` instead. */
  export const outboundSchema = PaymentLink$outboundSchema;
  /** @deprecated use `PaymentLink$Outbound` instead. */
  export type Outbound = PaymentLink$Outbound;
}

/** @internal */
export const GetPaymentLinkDocumentation$inboundSchema: z.ZodType<
  GetPaymentLinkDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetPaymentLinkDocumentation$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetPaymentLinkDocumentation$outboundSchema: z.ZodType<
  GetPaymentLinkDocumentation$Outbound,
  z.ZodTypeDef,
  GetPaymentLinkDocumentation
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinkDocumentation$ {
  /** @deprecated use `GetPaymentLinkDocumentation$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinkDocumentation$inboundSchema;
  /** @deprecated use `GetPaymentLinkDocumentation$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinkDocumentation$outboundSchema;
  /** @deprecated use `GetPaymentLinkDocumentation$Outbound` instead. */
  export type Outbound = GetPaymentLinkDocumentation$Outbound;
}

/** @internal */
export const GetPaymentLinkLinks$inboundSchema: z.ZodType<
  GetPaymentLinkLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => GetPaymentLinkSelf$inboundSchema).optional(),
  paymentLink: z.lazy(() => PaymentLink$inboundSchema).optional(),
  documentation: z.lazy(() => GetPaymentLinkDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type GetPaymentLinkLinks$Outbound = {
  self?: GetPaymentLinkSelf$Outbound | undefined;
  paymentLink?: PaymentLink$Outbound | undefined;
  documentation?: GetPaymentLinkDocumentation$Outbound | undefined;
};

/** @internal */
export const GetPaymentLinkLinks$outboundSchema: z.ZodType<
  GetPaymentLinkLinks$Outbound,
  z.ZodTypeDef,
  GetPaymentLinkLinks
> = z.object({
  self: z.lazy(() => GetPaymentLinkSelf$outboundSchema).optional(),
  paymentLink: z.lazy(() => PaymentLink$outboundSchema).optional(),
  documentation: z.lazy(() => GetPaymentLinkDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinkLinks$ {
  /** @deprecated use `GetPaymentLinkLinks$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinkLinks$inboundSchema;
  /** @deprecated use `GetPaymentLinkLinks$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinkLinks$outboundSchema;
  /** @deprecated use `GetPaymentLinkLinks$Outbound` instead. */
  export type Outbound = GetPaymentLinkLinks$Outbound;
}

/** @internal */
export const GetPaymentLinkResponseBody$inboundSchema: z.ZodType<
  GetPaymentLinkResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().default("payment-link"),
  id: z.string().optional(),
  mode: z.string().optional(),
  description: z.string().optional(),
  amount: z.nullable(z.lazy(() => GetPaymentLinkAmount$inboundSchema))
    .optional(),
  archived: z.boolean().optional(),
  redirectUrl: z.nullable(z.string()).optional(),
  webhookUrl: z.nullable(z.string()).optional(),
  paymentId: z.string().optional(),
  profileId: z.nullable(z.string()).optional(),
  createdAt: z.string().optional(),
  paidAt: z.nullable(z.string()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
  _links: z.lazy(() => GetPaymentLinkLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type GetPaymentLinkResponseBody$Outbound = {
  resource: string;
  id?: string | undefined;
  mode?: string | undefined;
  description?: string | undefined;
  amount?: GetPaymentLinkAmount$Outbound | null | undefined;
  archived?: boolean | undefined;
  redirectUrl?: string | null | undefined;
  webhookUrl?: string | null | undefined;
  paymentId?: string | undefined;
  profileId?: string | null | undefined;
  createdAt?: string | undefined;
  paidAt?: string | null | undefined;
  expiresAt?: string | null | undefined;
  _links?: GetPaymentLinkLinks$Outbound | undefined;
};

/** @internal */
export const GetPaymentLinkResponseBody$outboundSchema: z.ZodType<
  GetPaymentLinkResponseBody$Outbound,
  z.ZodTypeDef,
  GetPaymentLinkResponseBody
> = z.object({
  resource: z.string().default("payment-link"),
  id: z.string().optional(),
  mode: z.string().optional(),
  description: z.string().optional(),
  amount: z.nullable(z.lazy(() => GetPaymentLinkAmount$outboundSchema))
    .optional(),
  archived: z.boolean().optional(),
  redirectUrl: z.nullable(z.string()).optional(),
  webhookUrl: z.nullable(z.string()).optional(),
  paymentId: z.string().optional(),
  profileId: z.nullable(z.string()).optional(),
  createdAt: z.string().optional(),
  paidAt: z.nullable(z.string()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
  links: z.lazy(() => GetPaymentLinkLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinkResponseBody$ {
  /** @deprecated use `GetPaymentLinkResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinkResponseBody$inboundSchema;
  /** @deprecated use `GetPaymentLinkResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinkResponseBody$outboundSchema;
  /** @deprecated use `GetPaymentLinkResponseBody$Outbound` instead. */
  export type Outbound = GetPaymentLinkResponseBody$Outbound;
}
