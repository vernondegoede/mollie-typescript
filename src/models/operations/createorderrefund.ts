/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The amount that you want to refund. In almost all cases, Mollie can determine the amount automatically.
 *
 * @remarks
 *
 * The amount is required only if you are partially refunding an order line which has a non-zero `discountAmount`.
 *
 * The amount you can refund depends on various properties of the order line and the create order refund request. The maximum that can be refunded is `unit price x quantity to ship`.
 *
 * The minimum amount depends on the discount applied to the line, the quantity already refunded or shipped, the amounts already refunded or shipped and the quantity you want to refund.
 *
 * If you do not send an amount, Mollie will determine the amount automatically or respond with an error if the amount cannot be determined automatically. The error will contain the `extra.minimumAmount` and `extra.maximumAmount` properties that allow you pick the right amount.
 */
export type CreateOrderRefundAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

export type CreateOrderRefundLines = {
  /**
   * The ID of the order line you wish to refund. For example: `odl_jp31jz`.
   */
  id?: string | undefined;
  /**
   * The number of items that should be refunded for this order line. When this parameter is omitted, the whole order line will be refunded.
   *
   * @remarks
   *
   * Must be less than the number of items already refunded for this order line.
   */
  quantity?: number | undefined;
  /**
   * The amount that you want to refund. In almost all cases, Mollie can determine the amount automatically.
   *
   * @remarks
   *
   * The amount is required only if you are partially refunding an order line which has a non-zero `discountAmount`.
   *
   * The amount you can refund depends on various properties of the order line and the create order refund request. The maximum that can be refunded is `unit price x quantity to ship`.
   *
   * The minimum amount depends on the discount applied to the line, the quantity already refunded or shipped, the amounts already refunded or shipped and the quantity you want to refund.
   *
   * If you do not send an amount, Mollie will determine the amount automatically or respond with an error if the amount cannot be determined automatically. The error will contain the `extra.minimumAmount` and `extra.maximumAmount` properties that allow you pick the right amount.
   */
  amount?: CreateOrderRefundAmount | undefined;
};

export type CreateOrderRefundRequestBody = {
  /**
   * The description of the refund that may be shown to your customer, depending on the payment method used.
   */
  description?: string | undefined;
  /**
   * A refund can optionally be linked to specific order lines.
   *
   * @remarks
   *
   * The lines will show the `quantity`, `discountAmount`, `vatAmount`, and `totalAmount` refunded. If the line was partially refunded, these values will be different from the values in response from the [Get payment](get-payment) endpoint.
   */
  lines: Array<CreateOrderRefundLines>;
  /**
   * Provide any data you like, for example a string or a JSON object. We will save the data alongside the entity. Whenever you fetch the entity with our API, we will also include the metadata. You can use up to approximately 1kB.
   */
  metadata?: string | null | undefined;
  /**
   * Whether to create the entity in test mode or live mode.
   *
   * @remarks
   *
   * Most API credentials are specifically created for either live mode or test mode, in which case this parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
   */
  testmode?: boolean | null | undefined;
};

export type CreateOrderRefundRequest = {
  /**
   * Provide the ID of the related order.
   */
  orderId: string;
  requestBody?: CreateOrderRefundRequestBody | undefined;
};

/**
 * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
 */
export type CreateOrderRefundUnitPrice = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
 */
export type CreateOrderRefundTotalAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

export type CreateOrderRefundLinesOutput = {
  resource?: string | undefined;
  /**
   * The ID of the order line you wish to refund. For example: `odl_jp31jz`.
   */
  id?: string | undefined;
  orderId?: string | undefined;
  /**
   * The number of items that should be refunded for this order line. When this parameter is omitted, the whole order line will be refunded.
   *
   * @remarks
   *
   * Must be less than the number of items already refunded for this order line.
   */
  quantity?: number | undefined;
  /**
   * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
   */
  unitPrice?: CreateOrderRefundUnitPrice | undefined;
  /**
   * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
   */
  totalAmount?: CreateOrderRefundTotalAmount | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type CreateOrderRefundSelf = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
 */
export type CreateOrderRefundOrder = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
 */
export type CreateOrderRefundSettlement = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type CreateOrderRefundDocumentation = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type CreateOrderRefundLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: CreateOrderRefundSelf | undefined;
  /**
   * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
   */
  order?: CreateOrderRefundOrder | undefined;
  /**
   * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
   */
  settlement?: CreateOrderRefundSettlement | null | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: CreateOrderRefundDocumentation | undefined;
};

/**
 * The newly created refund object.
 */
export type CreateOrderRefundResponseBody = {
  /**
   * Indicates the response contains a refund object. Will always contain the string `refund` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this refund. Mollie assigns this identifier at refund creation time. Mollie will always refer to the refund by this ID. Example: `re_4qqhO89gsT`.
   */
  id?: string | undefined;
  /**
   * The description of the refund that may be shown to your customer, depending on the payment method used.
   */
  description?: string | undefined;
  /**
   * A refund can optionally be linked to specific order lines.
   *
   * @remarks
   *
   * The lines will show the `quantity`, `discountAmount`, `vatAmount`, and `totalAmount` refunded. If the line was partially refunded, these values will be different from the values in response from the [Get payment](get-payment) endpoint.
   */
  lines?: Array<CreateOrderRefundLinesOutput> | undefined;
  /**
   * Provide any data you like, for example a string or a JSON object. We will save the data alongside the entity. Whenever you fetch the entity with our API, we will also include the metadata. You can use up to approximately 1kB.
   */
  metadata?: string | null | undefined;
  /**
   * The unique identifier of the order this refund was created for. For example: `ord_8wmqcHMN4U`. Not present if the refund was not created for an order.
   */
  orderId?: string | undefined;
  /**
   * The identifier referring to the settlement this refund was settled with. For example, `stl_BkEjN2eBb`. This field is omitted if the refund is not settled (yet).
   */
  settlementId?: string | null | undefined;
  /**
   * Refunds may take some time to get confirmed. For a full overview of possible states, see the guide on refund statuses.
   */
  status?: string | undefined;
  /**
   * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  createdAt?: string | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: CreateOrderRefundLinks | undefined;
};

/** @internal */
export const CreateOrderRefundAmount$inboundSchema: z.ZodType<
  CreateOrderRefundAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type CreateOrderRefundAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const CreateOrderRefundAmount$outboundSchema: z.ZodType<
  CreateOrderRefundAmount$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundAmount$ {
  /** @deprecated use `CreateOrderRefundAmount$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundAmount$inboundSchema;
  /** @deprecated use `CreateOrderRefundAmount$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundAmount$outboundSchema;
  /** @deprecated use `CreateOrderRefundAmount$Outbound` instead. */
  export type Outbound = CreateOrderRefundAmount$Outbound;
}

/** @internal */
export const CreateOrderRefundLines$inboundSchema: z.ZodType<
  CreateOrderRefundLines,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  quantity: z.number().int().optional(),
  amount: z.lazy(() => CreateOrderRefundAmount$inboundSchema).optional(),
});

/** @internal */
export type CreateOrderRefundLines$Outbound = {
  id?: string | undefined;
  quantity?: number | undefined;
  amount?: CreateOrderRefundAmount$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundLines$outboundSchema: z.ZodType<
  CreateOrderRefundLines$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundLines
> = z.object({
  id: z.string().optional(),
  quantity: z.number().int().optional(),
  amount: z.lazy(() => CreateOrderRefundAmount$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundLines$ {
  /** @deprecated use `CreateOrderRefundLines$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundLines$inboundSchema;
  /** @deprecated use `CreateOrderRefundLines$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundLines$outboundSchema;
  /** @deprecated use `CreateOrderRefundLines$Outbound` instead. */
  export type Outbound = CreateOrderRefundLines$Outbound;
}

/** @internal */
export const CreateOrderRefundRequestBody$inboundSchema: z.ZodType<
  CreateOrderRefundRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string().optional(),
  lines: z.array(z.lazy(() => CreateOrderRefundLines$inboundSchema)),
  metadata: z.nullable(z.string()).optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/** @internal */
export type CreateOrderRefundRequestBody$Outbound = {
  description?: string | undefined;
  lines: Array<CreateOrderRefundLines$Outbound>;
  metadata?: string | null | undefined;
  testmode: boolean | null;
};

/** @internal */
export const CreateOrderRefundRequestBody$outboundSchema: z.ZodType<
  CreateOrderRefundRequestBody$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundRequestBody
> = z.object({
  description: z.string().optional(),
  lines: z.array(z.lazy(() => CreateOrderRefundLines$outboundSchema)),
  metadata: z.nullable(z.string()).optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundRequestBody$ {
  /** @deprecated use `CreateOrderRefundRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundRequestBody$inboundSchema;
  /** @deprecated use `CreateOrderRefundRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundRequestBody$outboundSchema;
  /** @deprecated use `CreateOrderRefundRequestBody$Outbound` instead. */
  export type Outbound = CreateOrderRefundRequestBody$Outbound;
}

/** @internal */
export const CreateOrderRefundRequest$inboundSchema: z.ZodType<
  CreateOrderRefundRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  orderId: z.string(),
  RequestBody: z.lazy(() => CreateOrderRefundRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateOrderRefundRequest$Outbound = {
  orderId: string;
  RequestBody?: CreateOrderRefundRequestBody$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundRequest$outboundSchema: z.ZodType<
  CreateOrderRefundRequest$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundRequest
> = z.object({
  orderId: z.string(),
  requestBody: z.lazy(() => CreateOrderRefundRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundRequest$ {
  /** @deprecated use `CreateOrderRefundRequest$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundRequest$inboundSchema;
  /** @deprecated use `CreateOrderRefundRequest$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundRequest$outboundSchema;
  /** @deprecated use `CreateOrderRefundRequest$Outbound` instead. */
  export type Outbound = CreateOrderRefundRequest$Outbound;
}

/** @internal */
export const CreateOrderRefundUnitPrice$inboundSchema: z.ZodType<
  CreateOrderRefundUnitPrice,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type CreateOrderRefundUnitPrice$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const CreateOrderRefundUnitPrice$outboundSchema: z.ZodType<
  CreateOrderRefundUnitPrice$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundUnitPrice
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundUnitPrice$ {
  /** @deprecated use `CreateOrderRefundUnitPrice$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundUnitPrice$inboundSchema;
  /** @deprecated use `CreateOrderRefundUnitPrice$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundUnitPrice$outboundSchema;
  /** @deprecated use `CreateOrderRefundUnitPrice$Outbound` instead. */
  export type Outbound = CreateOrderRefundUnitPrice$Outbound;
}

/** @internal */
export const CreateOrderRefundTotalAmount$inboundSchema: z.ZodType<
  CreateOrderRefundTotalAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type CreateOrderRefundTotalAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const CreateOrderRefundTotalAmount$outboundSchema: z.ZodType<
  CreateOrderRefundTotalAmount$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundTotalAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundTotalAmount$ {
  /** @deprecated use `CreateOrderRefundTotalAmount$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundTotalAmount$inboundSchema;
  /** @deprecated use `CreateOrderRefundTotalAmount$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundTotalAmount$outboundSchema;
  /** @deprecated use `CreateOrderRefundTotalAmount$Outbound` instead. */
  export type Outbound = CreateOrderRefundTotalAmount$Outbound;
}

/** @internal */
export const CreateOrderRefundLinesOutput$inboundSchema: z.ZodType<
  CreateOrderRefundLinesOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().optional(),
  id: z.string().optional(),
  orderId: z.string().optional(),
  quantity: z.number().int().optional(),
  unitPrice: z.lazy(() => CreateOrderRefundUnitPrice$inboundSchema).optional(),
  totalAmount: z.lazy(() => CreateOrderRefundTotalAmount$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateOrderRefundLinesOutput$Outbound = {
  resource?: string | undefined;
  id?: string | undefined;
  orderId?: string | undefined;
  quantity?: number | undefined;
  unitPrice?: CreateOrderRefundUnitPrice$Outbound | undefined;
  totalAmount?: CreateOrderRefundTotalAmount$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundLinesOutput$outboundSchema: z.ZodType<
  CreateOrderRefundLinesOutput$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundLinesOutput
> = z.object({
  resource: z.string().optional(),
  id: z.string().optional(),
  orderId: z.string().optional(),
  quantity: z.number().int().optional(),
  unitPrice: z.lazy(() => CreateOrderRefundUnitPrice$outboundSchema).optional(),
  totalAmount: z.lazy(() => CreateOrderRefundTotalAmount$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundLinesOutput$ {
  /** @deprecated use `CreateOrderRefundLinesOutput$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundLinesOutput$inboundSchema;
  /** @deprecated use `CreateOrderRefundLinesOutput$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundLinesOutput$outboundSchema;
  /** @deprecated use `CreateOrderRefundLinesOutput$Outbound` instead. */
  export type Outbound = CreateOrderRefundLinesOutput$Outbound;
}

/** @internal */
export const CreateOrderRefundSelf$inboundSchema: z.ZodType<
  CreateOrderRefundSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type CreateOrderRefundSelf$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const CreateOrderRefundSelf$outboundSchema: z.ZodType<
  CreateOrderRefundSelf$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundSelf
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundSelf$ {
  /** @deprecated use `CreateOrderRefundSelf$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundSelf$inboundSchema;
  /** @deprecated use `CreateOrderRefundSelf$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundSelf$outboundSchema;
  /** @deprecated use `CreateOrderRefundSelf$Outbound` instead. */
  export type Outbound = CreateOrderRefundSelf$Outbound;
}

/** @internal */
export const CreateOrderRefundOrder$inboundSchema: z.ZodType<
  CreateOrderRefundOrder,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type CreateOrderRefundOrder$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const CreateOrderRefundOrder$outboundSchema: z.ZodType<
  CreateOrderRefundOrder$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundOrder
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundOrder$ {
  /** @deprecated use `CreateOrderRefundOrder$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundOrder$inboundSchema;
  /** @deprecated use `CreateOrderRefundOrder$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundOrder$outboundSchema;
  /** @deprecated use `CreateOrderRefundOrder$Outbound` instead. */
  export type Outbound = CreateOrderRefundOrder$Outbound;
}

/** @internal */
export const CreateOrderRefundSettlement$inboundSchema: z.ZodType<
  CreateOrderRefundSettlement,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type CreateOrderRefundSettlement$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const CreateOrderRefundSettlement$outboundSchema: z.ZodType<
  CreateOrderRefundSettlement$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundSettlement
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundSettlement$ {
  /** @deprecated use `CreateOrderRefundSettlement$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundSettlement$inboundSchema;
  /** @deprecated use `CreateOrderRefundSettlement$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundSettlement$outboundSchema;
  /** @deprecated use `CreateOrderRefundSettlement$Outbound` instead. */
  export type Outbound = CreateOrderRefundSettlement$Outbound;
}

/** @internal */
export const CreateOrderRefundDocumentation$inboundSchema: z.ZodType<
  CreateOrderRefundDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type CreateOrderRefundDocumentation$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const CreateOrderRefundDocumentation$outboundSchema: z.ZodType<
  CreateOrderRefundDocumentation$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundDocumentation
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundDocumentation$ {
  /** @deprecated use `CreateOrderRefundDocumentation$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundDocumentation$inboundSchema;
  /** @deprecated use `CreateOrderRefundDocumentation$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundDocumentation$outboundSchema;
  /** @deprecated use `CreateOrderRefundDocumentation$Outbound` instead. */
  export type Outbound = CreateOrderRefundDocumentation$Outbound;
}

/** @internal */
export const CreateOrderRefundLinks$inboundSchema: z.ZodType<
  CreateOrderRefundLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => CreateOrderRefundSelf$inboundSchema).optional(),
  order: z.lazy(() => CreateOrderRefundOrder$inboundSchema).optional(),
  settlement: z.nullable(
    z.lazy(() => CreateOrderRefundSettlement$inboundSchema),
  ).optional(),
  documentation: z.lazy(() => CreateOrderRefundDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateOrderRefundLinks$Outbound = {
  self?: CreateOrderRefundSelf$Outbound | undefined;
  order?: CreateOrderRefundOrder$Outbound | undefined;
  settlement?: CreateOrderRefundSettlement$Outbound | null | undefined;
  documentation?: CreateOrderRefundDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundLinks$outboundSchema: z.ZodType<
  CreateOrderRefundLinks$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundLinks
> = z.object({
  self: z.lazy(() => CreateOrderRefundSelf$outboundSchema).optional(),
  order: z.lazy(() => CreateOrderRefundOrder$outboundSchema).optional(),
  settlement: z.nullable(
    z.lazy(() => CreateOrderRefundSettlement$outboundSchema),
  ).optional(),
  documentation: z.lazy(() => CreateOrderRefundDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundLinks$ {
  /** @deprecated use `CreateOrderRefundLinks$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundLinks$inboundSchema;
  /** @deprecated use `CreateOrderRefundLinks$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundLinks$outboundSchema;
  /** @deprecated use `CreateOrderRefundLinks$Outbound` instead. */
  export type Outbound = CreateOrderRefundLinks$Outbound;
}

/** @internal */
export const CreateOrderRefundResponseBody$inboundSchema: z.ZodType<
  CreateOrderRefundResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().default("refund"),
  id: z.string().optional(),
  description: z.string().optional(),
  lines: z.array(z.lazy(() => CreateOrderRefundLinesOutput$inboundSchema))
    .optional(),
  metadata: z.nullable(z.string()).optional(),
  orderId: z.string().optional(),
  settlementId: z.nullable(z.string()).optional(),
  status: z.string().optional(),
  createdAt: z.string().optional(),
  _links: z.lazy(() => CreateOrderRefundLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateOrderRefundResponseBody$Outbound = {
  resource: string;
  id?: string | undefined;
  description?: string | undefined;
  lines?: Array<CreateOrderRefundLinesOutput$Outbound> | undefined;
  metadata?: string | null | undefined;
  orderId?: string | undefined;
  settlementId?: string | null | undefined;
  status?: string | undefined;
  createdAt?: string | undefined;
  _links?: CreateOrderRefundLinks$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundResponseBody$outboundSchema: z.ZodType<
  CreateOrderRefundResponseBody$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundResponseBody
> = z.object({
  resource: z.string().default("refund"),
  id: z.string().optional(),
  description: z.string().optional(),
  lines: z.array(z.lazy(() => CreateOrderRefundLinesOutput$outboundSchema))
    .optional(),
  metadata: z.nullable(z.string()).optional(),
  orderId: z.string().optional(),
  settlementId: z.nullable(z.string()).optional(),
  status: z.string().optional(),
  createdAt: z.string().optional(),
  links: z.lazy(() => CreateOrderRefundLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundResponseBody$ {
  /** @deprecated use `CreateOrderRefundResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundResponseBody$inboundSchema;
  /** @deprecated use `CreateOrderRefundResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundResponseBody$outboundSchema;
  /** @deprecated use `CreateOrderRefundResponseBody$Outbound` instead. */
  export type Outbound = CreateOrderRefundResponseBody$Outbound;
}
