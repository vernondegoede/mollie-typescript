/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ListPaymentLinksRequest = {
  /**
   * Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the result set.
   */
  from?: string | null | undefined;
  /**
   * The maximum number of items to return. Defaults to 50 items.
   */
  limit?: number | null | undefined;
  /**
   * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting the `testmode` query parameter to `true`.
   *
   * @remarks
   *
   * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
   */
  testmode?: boolean | null | undefined;
};

export type PaymentLinks = {};

export type ListPaymentLinksEmbedded = {
  /**
   * An array of payment link objects. For a complete reference of the payment link object, refer to the [Get payment link endpoint](get-payment-link) documentation.
   */
  paymentLinks?: Array<PaymentLinks> | undefined;
};

/**
 * The URL to the current set of items.
 */
export type ListPaymentLinksSelf = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The previous set of items, if available.
 */
export type ListPaymentLinksPrevious = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The next set of items, if available.
 */
export type ListPaymentLinksNext = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type ListPaymentLinksDocumentation = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
 */
export type ListPaymentLinksLinks = {
  /**
   * The URL to the current set of items.
   */
  self?: ListPaymentLinksSelf | undefined;
  /**
   * The previous set of items, if available.
   */
  previous?: ListPaymentLinksPrevious | null | undefined;
  /**
   * The next set of items, if available.
   */
  next?: ListPaymentLinksNext | null | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: ListPaymentLinksDocumentation | undefined;
};

/**
 * A list of payment link objects. For a complete reference of the payment link object, refer to the [Get payment link endpoint](get-payment-link) documentation.
 */
export type ListPaymentLinksResponseBody = {
  /**
   * The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result as well.
   *
   * @remarks
   *
   * The maximum number of items per result set is controlled by the `limit` property provided in the request. The default limit is 50 items.
   */
  count?: number | undefined;
  embedded?: ListPaymentLinksEmbedded | undefined;
  /**
   * Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
   */
  links?: ListPaymentLinksLinks | undefined;
};

/** @internal */
export const ListPaymentLinksRequest$inboundSchema: z.ZodType<
  ListPaymentLinksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  from: z.nullable(z.string()).optional(),
  limit: z.nullable(z.number().int().default(50)),
  testmode: z.nullable(z.boolean().default(false)),
});

/** @internal */
export type ListPaymentLinksRequest$Outbound = {
  from?: string | null | undefined;
  limit: number | null;
  testmode: boolean | null;
};

/** @internal */
export const ListPaymentLinksRequest$outboundSchema: z.ZodType<
  ListPaymentLinksRequest$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksRequest
> = z.object({
  from: z.nullable(z.string()).optional(),
  limit: z.nullable(z.number().int().default(50)),
  testmode: z.nullable(z.boolean().default(false)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksRequest$ {
  /** @deprecated use `ListPaymentLinksRequest$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksRequest$inboundSchema;
  /** @deprecated use `ListPaymentLinksRequest$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksRequest$outboundSchema;
  /** @deprecated use `ListPaymentLinksRequest$Outbound` instead. */
  export type Outbound = ListPaymentLinksRequest$Outbound;
}

/** @internal */
export const PaymentLinks$inboundSchema: z.ZodType<
  PaymentLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PaymentLinks$Outbound = {};

/** @internal */
export const PaymentLinks$outboundSchema: z.ZodType<
  PaymentLinks$Outbound,
  z.ZodTypeDef,
  PaymentLinks
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentLinks$ {
  /** @deprecated use `PaymentLinks$inboundSchema` instead. */
  export const inboundSchema = PaymentLinks$inboundSchema;
  /** @deprecated use `PaymentLinks$outboundSchema` instead. */
  export const outboundSchema = PaymentLinks$outboundSchema;
  /** @deprecated use `PaymentLinks$Outbound` instead. */
  export type Outbound = PaymentLinks$Outbound;
}

/** @internal */
export const ListPaymentLinksEmbedded$inboundSchema: z.ZodType<
  ListPaymentLinksEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  payment_links: z.array(z.lazy(() => PaymentLinks$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "payment_links": "paymentLinks",
  });
});

/** @internal */
export type ListPaymentLinksEmbedded$Outbound = {
  payment_links?: Array<PaymentLinks$Outbound> | undefined;
};

/** @internal */
export const ListPaymentLinksEmbedded$outboundSchema: z.ZodType<
  ListPaymentLinksEmbedded$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksEmbedded
> = z.object({
  paymentLinks: z.array(z.lazy(() => PaymentLinks$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    paymentLinks: "payment_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksEmbedded$ {
  /** @deprecated use `ListPaymentLinksEmbedded$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksEmbedded$inboundSchema;
  /** @deprecated use `ListPaymentLinksEmbedded$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksEmbedded$outboundSchema;
  /** @deprecated use `ListPaymentLinksEmbedded$Outbound` instead. */
  export type Outbound = ListPaymentLinksEmbedded$Outbound;
}

/** @internal */
export const ListPaymentLinksSelf$inboundSchema: z.ZodType<
  ListPaymentLinksSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListPaymentLinksSelf$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListPaymentLinksSelf$outboundSchema: z.ZodType<
  ListPaymentLinksSelf$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksSelf
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksSelf$ {
  /** @deprecated use `ListPaymentLinksSelf$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksSelf$inboundSchema;
  /** @deprecated use `ListPaymentLinksSelf$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksSelf$outboundSchema;
  /** @deprecated use `ListPaymentLinksSelf$Outbound` instead. */
  export type Outbound = ListPaymentLinksSelf$Outbound;
}

/** @internal */
export const ListPaymentLinksPrevious$inboundSchema: z.ZodType<
  ListPaymentLinksPrevious,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListPaymentLinksPrevious$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListPaymentLinksPrevious$outboundSchema: z.ZodType<
  ListPaymentLinksPrevious$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksPrevious
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksPrevious$ {
  /** @deprecated use `ListPaymentLinksPrevious$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksPrevious$inboundSchema;
  /** @deprecated use `ListPaymentLinksPrevious$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksPrevious$outboundSchema;
  /** @deprecated use `ListPaymentLinksPrevious$Outbound` instead. */
  export type Outbound = ListPaymentLinksPrevious$Outbound;
}

/** @internal */
export const ListPaymentLinksNext$inboundSchema: z.ZodType<
  ListPaymentLinksNext,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListPaymentLinksNext$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListPaymentLinksNext$outboundSchema: z.ZodType<
  ListPaymentLinksNext$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksNext
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksNext$ {
  /** @deprecated use `ListPaymentLinksNext$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksNext$inboundSchema;
  /** @deprecated use `ListPaymentLinksNext$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksNext$outboundSchema;
  /** @deprecated use `ListPaymentLinksNext$Outbound` instead. */
  export type Outbound = ListPaymentLinksNext$Outbound;
}

/** @internal */
export const ListPaymentLinksDocumentation$inboundSchema: z.ZodType<
  ListPaymentLinksDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListPaymentLinksDocumentation$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListPaymentLinksDocumentation$outboundSchema: z.ZodType<
  ListPaymentLinksDocumentation$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksDocumentation
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksDocumentation$ {
  /** @deprecated use `ListPaymentLinksDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksDocumentation$inboundSchema;
  /** @deprecated use `ListPaymentLinksDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksDocumentation$outboundSchema;
  /** @deprecated use `ListPaymentLinksDocumentation$Outbound` instead. */
  export type Outbound = ListPaymentLinksDocumentation$Outbound;
}

/** @internal */
export const ListPaymentLinksLinks$inboundSchema: z.ZodType<
  ListPaymentLinksLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => ListPaymentLinksSelf$inboundSchema).optional(),
  previous: z.nullable(z.lazy(() => ListPaymentLinksPrevious$inboundSchema))
    .optional(),
  next: z.nullable(z.lazy(() => ListPaymentLinksNext$inboundSchema)).optional(),
  documentation: z.lazy(() => ListPaymentLinksDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListPaymentLinksLinks$Outbound = {
  self?: ListPaymentLinksSelf$Outbound | undefined;
  previous?: ListPaymentLinksPrevious$Outbound | null | undefined;
  next?: ListPaymentLinksNext$Outbound | null | undefined;
  documentation?: ListPaymentLinksDocumentation$Outbound | undefined;
};

/** @internal */
export const ListPaymentLinksLinks$outboundSchema: z.ZodType<
  ListPaymentLinksLinks$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksLinks
> = z.object({
  self: z.lazy(() => ListPaymentLinksSelf$outboundSchema).optional(),
  previous: z.nullable(z.lazy(() => ListPaymentLinksPrevious$outboundSchema))
    .optional(),
  next: z.nullable(z.lazy(() => ListPaymentLinksNext$outboundSchema))
    .optional(),
  documentation: z.lazy(() => ListPaymentLinksDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksLinks$ {
  /** @deprecated use `ListPaymentLinksLinks$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksLinks$inboundSchema;
  /** @deprecated use `ListPaymentLinksLinks$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksLinks$outboundSchema;
  /** @deprecated use `ListPaymentLinksLinks$Outbound` instead. */
  export type Outbound = ListPaymentLinksLinks$Outbound;
}

/** @internal */
export const ListPaymentLinksResponseBody$inboundSchema: z.ZodType<
  ListPaymentLinksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  _embedded: z.lazy(() => ListPaymentLinksEmbedded$inboundSchema).optional(),
  _links: z.lazy(() => ListPaymentLinksLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_embedded": "embedded",
    "_links": "links",
  });
});

/** @internal */
export type ListPaymentLinksResponseBody$Outbound = {
  count?: number | undefined;
  _embedded?: ListPaymentLinksEmbedded$Outbound | undefined;
  _links?: ListPaymentLinksLinks$Outbound | undefined;
};

/** @internal */
export const ListPaymentLinksResponseBody$outboundSchema: z.ZodType<
  ListPaymentLinksResponseBody$Outbound,
  z.ZodTypeDef,
  ListPaymentLinksResponseBody
> = z.object({
  count: z.number().int().optional(),
  embedded: z.lazy(() => ListPaymentLinksEmbedded$outboundSchema).optional(),
  links: z.lazy(() => ListPaymentLinksLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    embedded: "_embedded",
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListPaymentLinksResponseBody$ {
  /** @deprecated use `ListPaymentLinksResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListPaymentLinksResponseBody$inboundSchema;
  /** @deprecated use `ListPaymentLinksResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListPaymentLinksResponseBody$outboundSchema;
  /** @deprecated use `ListPaymentLinksResponseBody$Outbound` instead. */
  export type Outbound = ListPaymentLinksResponseBody$Outbound;
}
