/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ListAllRefundsRequest = {
  /**
   * Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the result set.
   */
  from?: string | null | undefined;
  /**
   * The maximum number of items to return. Defaults to 50 items.
   */
  limit?: number | null | undefined;
  /**
   * This endpoint allows you to include additional information via the `include` query string parameter.
   *
   * @remarks
   *
   * * `payment`: Include the payments that the refunds were created for.
   */
  include?: string | null | undefined;
  /**
   * The identifier referring to the [profile](get-profile) you wish to retrieve refunds for.
   *
   * @remarks
   *
   * Most API credentials are linked to a single profile. In these cases the `profileId` is already implied.
   *
   * To retrieve all refunds across the organization, use an organization-level API credential and omit the `profileId` parameter.
   */
  profileId?: string | undefined;
  /**
   * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting the `testmode` query parameter to `true`.
   *
   * @remarks
   *
   * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
   */
  testmode?: boolean | null | undefined;
};

export type ListAllRefundsRefunds = {};

export type ListAllRefundsEmbedded = {
  /**
   * An array of refund objects. For a complete reference of the refund object, refer to the [Get refund endpoint](get-refund) documentation.
   */
  refunds?: Array<ListAllRefundsRefunds> | undefined;
};

/**
 * The URL to the current set of items.
 */
export type ListAllRefundsSelf = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The previous set of items, if available.
 */
export type ListAllRefundsPrevious = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The next set of items, if available.
 */
export type ListAllRefundsNext = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type ListAllRefundsDocumentation = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
 */
export type ListAllRefundsLinks = {
  /**
   * The URL to the current set of items.
   */
  self?: ListAllRefundsSelf | undefined;
  /**
   * The previous set of items, if available.
   */
  previous?: ListAllRefundsPrevious | null | undefined;
  /**
   * The next set of items, if available.
   */
  next?: ListAllRefundsNext | null | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: ListAllRefundsDocumentation | undefined;
};

/**
 * A list of refund objects. For a complete reference of the refund object, refer to the [Get refund endpoint](get-refund) documentation.
 */
export type ListAllRefundsResponseBody = {
  /**
   * The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result as well.
   *
   * @remarks
   *
   * The maximum number of items per result set is controlled by the `limit` property provided in the request. The default limit is 50 items.
   */
  count?: number | undefined;
  embedded?: ListAllRefundsEmbedded | undefined;
  /**
   * Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
   */
  links?: ListAllRefundsLinks | undefined;
};

/** @internal */
export const ListAllRefundsRequest$inboundSchema: z.ZodType<
  ListAllRefundsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  from: z.nullable(z.string()).optional(),
  limit: z.nullable(z.number().int().default(50)),
  include: z.nullable(z.string()).optional(),
  profileId: z.string().optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/** @internal */
export type ListAllRefundsRequest$Outbound = {
  from?: string | null | undefined;
  limit: number | null;
  include?: string | null | undefined;
  profileId?: string | undefined;
  testmode: boolean | null;
};

/** @internal */
export const ListAllRefundsRequest$outboundSchema: z.ZodType<
  ListAllRefundsRequest$Outbound,
  z.ZodTypeDef,
  ListAllRefundsRequest
> = z.object({
  from: z.nullable(z.string()).optional(),
  limit: z.nullable(z.number().int().default(50)),
  include: z.nullable(z.string()).optional(),
  profileId: z.string().optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsRequest$ {
  /** @deprecated use `ListAllRefundsRequest$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsRequest$inboundSchema;
  /** @deprecated use `ListAllRefundsRequest$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsRequest$outboundSchema;
  /** @deprecated use `ListAllRefundsRequest$Outbound` instead. */
  export type Outbound = ListAllRefundsRequest$Outbound;
}

/** @internal */
export const ListAllRefundsRefunds$inboundSchema: z.ZodType<
  ListAllRefundsRefunds,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ListAllRefundsRefunds$Outbound = {};

/** @internal */
export const ListAllRefundsRefunds$outboundSchema: z.ZodType<
  ListAllRefundsRefunds$Outbound,
  z.ZodTypeDef,
  ListAllRefundsRefunds
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsRefunds$ {
  /** @deprecated use `ListAllRefundsRefunds$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsRefunds$inboundSchema;
  /** @deprecated use `ListAllRefundsRefunds$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsRefunds$outboundSchema;
  /** @deprecated use `ListAllRefundsRefunds$Outbound` instead. */
  export type Outbound = ListAllRefundsRefunds$Outbound;
}

/** @internal */
export const ListAllRefundsEmbedded$inboundSchema: z.ZodType<
  ListAllRefundsEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  refunds: z.array(z.lazy(() => ListAllRefundsRefunds$inboundSchema))
    .optional(),
});

/** @internal */
export type ListAllRefundsEmbedded$Outbound = {
  refunds?: Array<ListAllRefundsRefunds$Outbound> | undefined;
};

/** @internal */
export const ListAllRefundsEmbedded$outboundSchema: z.ZodType<
  ListAllRefundsEmbedded$Outbound,
  z.ZodTypeDef,
  ListAllRefundsEmbedded
> = z.object({
  refunds: z.array(z.lazy(() => ListAllRefundsRefunds$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsEmbedded$ {
  /** @deprecated use `ListAllRefundsEmbedded$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsEmbedded$inboundSchema;
  /** @deprecated use `ListAllRefundsEmbedded$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsEmbedded$outboundSchema;
  /** @deprecated use `ListAllRefundsEmbedded$Outbound` instead. */
  export type Outbound = ListAllRefundsEmbedded$Outbound;
}

/** @internal */
export const ListAllRefundsSelf$inboundSchema: z.ZodType<
  ListAllRefundsSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListAllRefundsSelf$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListAllRefundsSelf$outboundSchema: z.ZodType<
  ListAllRefundsSelf$Outbound,
  z.ZodTypeDef,
  ListAllRefundsSelf
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsSelf$ {
  /** @deprecated use `ListAllRefundsSelf$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsSelf$inboundSchema;
  /** @deprecated use `ListAllRefundsSelf$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsSelf$outboundSchema;
  /** @deprecated use `ListAllRefundsSelf$Outbound` instead. */
  export type Outbound = ListAllRefundsSelf$Outbound;
}

/** @internal */
export const ListAllRefundsPrevious$inboundSchema: z.ZodType<
  ListAllRefundsPrevious,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListAllRefundsPrevious$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListAllRefundsPrevious$outboundSchema: z.ZodType<
  ListAllRefundsPrevious$Outbound,
  z.ZodTypeDef,
  ListAllRefundsPrevious
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsPrevious$ {
  /** @deprecated use `ListAllRefundsPrevious$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsPrevious$inboundSchema;
  /** @deprecated use `ListAllRefundsPrevious$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsPrevious$outboundSchema;
  /** @deprecated use `ListAllRefundsPrevious$Outbound` instead. */
  export type Outbound = ListAllRefundsPrevious$Outbound;
}

/** @internal */
export const ListAllRefundsNext$inboundSchema: z.ZodType<
  ListAllRefundsNext,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListAllRefundsNext$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListAllRefundsNext$outboundSchema: z.ZodType<
  ListAllRefundsNext$Outbound,
  z.ZodTypeDef,
  ListAllRefundsNext
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsNext$ {
  /** @deprecated use `ListAllRefundsNext$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsNext$inboundSchema;
  /** @deprecated use `ListAllRefundsNext$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsNext$outboundSchema;
  /** @deprecated use `ListAllRefundsNext$Outbound` instead. */
  export type Outbound = ListAllRefundsNext$Outbound;
}

/** @internal */
export const ListAllRefundsDocumentation$inboundSchema: z.ZodType<
  ListAllRefundsDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type ListAllRefundsDocumentation$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ListAllRefundsDocumentation$outboundSchema: z.ZodType<
  ListAllRefundsDocumentation$Outbound,
  z.ZodTypeDef,
  ListAllRefundsDocumentation
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsDocumentation$ {
  /** @deprecated use `ListAllRefundsDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsDocumentation$inboundSchema;
  /** @deprecated use `ListAllRefundsDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsDocumentation$outboundSchema;
  /** @deprecated use `ListAllRefundsDocumentation$Outbound` instead. */
  export type Outbound = ListAllRefundsDocumentation$Outbound;
}

/** @internal */
export const ListAllRefundsLinks$inboundSchema: z.ZodType<
  ListAllRefundsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => ListAllRefundsSelf$inboundSchema).optional(),
  previous: z.nullable(z.lazy(() => ListAllRefundsPrevious$inboundSchema))
    .optional(),
  next: z.nullable(z.lazy(() => ListAllRefundsNext$inboundSchema)).optional(),
  documentation: z.lazy(() => ListAllRefundsDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListAllRefundsLinks$Outbound = {
  self?: ListAllRefundsSelf$Outbound | undefined;
  previous?: ListAllRefundsPrevious$Outbound | null | undefined;
  next?: ListAllRefundsNext$Outbound | null | undefined;
  documentation?: ListAllRefundsDocumentation$Outbound | undefined;
};

/** @internal */
export const ListAllRefundsLinks$outboundSchema: z.ZodType<
  ListAllRefundsLinks$Outbound,
  z.ZodTypeDef,
  ListAllRefundsLinks
> = z.object({
  self: z.lazy(() => ListAllRefundsSelf$outboundSchema).optional(),
  previous: z.nullable(z.lazy(() => ListAllRefundsPrevious$outboundSchema))
    .optional(),
  next: z.nullable(z.lazy(() => ListAllRefundsNext$outboundSchema)).optional(),
  documentation: z.lazy(() => ListAllRefundsDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsLinks$ {
  /** @deprecated use `ListAllRefundsLinks$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsLinks$inboundSchema;
  /** @deprecated use `ListAllRefundsLinks$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsLinks$outboundSchema;
  /** @deprecated use `ListAllRefundsLinks$Outbound` instead. */
  export type Outbound = ListAllRefundsLinks$Outbound;
}

/** @internal */
export const ListAllRefundsResponseBody$inboundSchema: z.ZodType<
  ListAllRefundsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  _embedded: z.lazy(() => ListAllRefundsEmbedded$inboundSchema).optional(),
  _links: z.lazy(() => ListAllRefundsLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_embedded": "embedded",
    "_links": "links",
  });
});

/** @internal */
export type ListAllRefundsResponseBody$Outbound = {
  count?: number | undefined;
  _embedded?: ListAllRefundsEmbedded$Outbound | undefined;
  _links?: ListAllRefundsLinks$Outbound | undefined;
};

/** @internal */
export const ListAllRefundsResponseBody$outboundSchema: z.ZodType<
  ListAllRefundsResponseBody$Outbound,
  z.ZodTypeDef,
  ListAllRefundsResponseBody
> = z.object({
  count: z.number().int().optional(),
  embedded: z.lazy(() => ListAllRefundsEmbedded$outboundSchema).optional(),
  links: z.lazy(() => ListAllRefundsLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    embedded: "_embedded",
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsResponseBody$ {
  /** @deprecated use `ListAllRefundsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsResponseBody$inboundSchema;
  /** @deprecated use `ListAllRefundsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsResponseBody$outboundSchema;
  /** @deprecated use `ListAllRefundsResponseBody$Outbound` instead. */
  export type Outbound = ListAllRefundsResponseBody$Outbound;
}
