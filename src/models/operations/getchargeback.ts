/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetChargebackRequest = {
  /**
   * Provide the ID of the related payment.
   */
  paymentId: string;
  /**
   * Provide the ID of the item you want to perform this operation on.
   */
  id: string;
  /**
   * This endpoint allows you to include additional information via the `include` query string parameter.
   *
   * @remarks
   *
   * * `payment`: Include the payment this chargeback was issued for.
   */
  include?: string | null | undefined;
  /**
   * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting the `testmode` query parameter to `true`.
   *
   * @remarks
   *
   * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
   */
  testmode?: boolean | null | undefined;
};

/**
 * The amount charged back by the customer.
 */
export type GetChargebackAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * This optional field will contain the approximate amount that will be deducted from your account balance, converted to the currency your account is settled in.
 *
 * @remarks
 *
 * The amount is a **negative** amount.
 *
 * Since the field contains an estimated amount during chargeback processing, it may change over time. To retrieve accurate settlement amounts we recommend using the [List balance transactions endpoint](list-balance-transactions) instead.
 */
export type GetChargebackSettlementAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * Reason for the chargeback as given by the bank. Only available for chargebacks of SEPA Direct Debit payments.
 */
export type Reason = {
  /**
   * Technical code provided by the bank.
   */
  code?: string | undefined;
  /**
   * A more detailed human-friendly description.
   */
  description?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetChargebackSelf = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The API resource URL of the [payment](get-payment) that this chargeback belongs to.
 */
export type GetChargebackPayment = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
 */
export type GetChargebackSettlement = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetChargebackDocumentation = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type GetChargebackLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: GetChargebackSelf | undefined;
  /**
   * The API resource URL of the [payment](get-payment) that this chargeback belongs to.
   */
  payment?: GetChargebackPayment | undefined;
  /**
   * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
   */
  settlement?: GetChargebackSettlement | null | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: GetChargebackDocumentation | undefined;
};

/**
 * The chargeback object.
 */
export type GetChargebackResponseBody = {
  /**
   * Indicates the response contains a chargeback object. Will always contain the string `chargeback` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this chargeback. Example: `chb_n9z0tp`.
   */
  id?: string | undefined;
  /**
   * The amount charged back by the customer.
   */
  amount?: GetChargebackAmount | undefined;
  /**
   * This optional field will contain the approximate amount that will be deducted from your account balance, converted to the currency your account is settled in.
   *
   * @remarks
   *
   * The amount is a **negative** amount.
   *
   * Since the field contains an estimated amount during chargeback processing, it may change over time. To retrieve accurate settlement amounts we recommend using the [List balance transactions endpoint](list-balance-transactions) instead.
   */
  settlementAmount?: GetChargebackSettlementAmount | null | undefined;
  /**
   * Reason for the chargeback as given by the bank. Only available for chargebacks of SEPA Direct Debit payments.
   */
  reason?: Reason | null | undefined;
  /**
   * The unique identifier of the payment this chargeback was created for. For example: `tr_7UhSN1zuXS`. The full payment object can be retrieved via the payment URL in the `_links` object.
   */
  paymentId?: string | undefined;
  /**
   * The identifier referring to the settlement this payment was settled with. For example, `stl_BkEjN2eBb`. This field is omitted if the refund is not settled (yet).
   */
  settlementId?: string | null | undefined;
  /**
   * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  createdAt?: string | undefined;
  /**
   * The date and time the chargeback was reversed if applicable, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  reversedAt?: string | null | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: GetChargebackLinks | undefined;
};

/** @internal */
export const GetChargebackRequest$inboundSchema: z.ZodType<
  GetChargebackRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentId: z.string(),
  id: z.string(),
  include: z.nullable(z.string()).optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/** @internal */
export type GetChargebackRequest$Outbound = {
  paymentId: string;
  id: string;
  include?: string | null | undefined;
  testmode: boolean | null;
};

/** @internal */
export const GetChargebackRequest$outboundSchema: z.ZodType<
  GetChargebackRequest$Outbound,
  z.ZodTypeDef,
  GetChargebackRequest
> = z.object({
  paymentId: z.string(),
  id: z.string(),
  include: z.nullable(z.string()).optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackRequest$ {
  /** @deprecated use `GetChargebackRequest$inboundSchema` instead. */
  export const inboundSchema = GetChargebackRequest$inboundSchema;
  /** @deprecated use `GetChargebackRequest$outboundSchema` instead. */
  export const outboundSchema = GetChargebackRequest$outboundSchema;
  /** @deprecated use `GetChargebackRequest$Outbound` instead. */
  export type Outbound = GetChargebackRequest$Outbound;
}

/** @internal */
export const GetChargebackAmount$inboundSchema: z.ZodType<
  GetChargebackAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type GetChargebackAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const GetChargebackAmount$outboundSchema: z.ZodType<
  GetChargebackAmount$Outbound,
  z.ZodTypeDef,
  GetChargebackAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackAmount$ {
  /** @deprecated use `GetChargebackAmount$inboundSchema` instead. */
  export const inboundSchema = GetChargebackAmount$inboundSchema;
  /** @deprecated use `GetChargebackAmount$outboundSchema` instead. */
  export const outboundSchema = GetChargebackAmount$outboundSchema;
  /** @deprecated use `GetChargebackAmount$Outbound` instead. */
  export type Outbound = GetChargebackAmount$Outbound;
}

/** @internal */
export const GetChargebackSettlementAmount$inboundSchema: z.ZodType<
  GetChargebackSettlementAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type GetChargebackSettlementAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const GetChargebackSettlementAmount$outboundSchema: z.ZodType<
  GetChargebackSettlementAmount$Outbound,
  z.ZodTypeDef,
  GetChargebackSettlementAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackSettlementAmount$ {
  /** @deprecated use `GetChargebackSettlementAmount$inboundSchema` instead. */
  export const inboundSchema = GetChargebackSettlementAmount$inboundSchema;
  /** @deprecated use `GetChargebackSettlementAmount$outboundSchema` instead. */
  export const outboundSchema = GetChargebackSettlementAmount$outboundSchema;
  /** @deprecated use `GetChargebackSettlementAmount$Outbound` instead. */
  export type Outbound = GetChargebackSettlementAmount$Outbound;
}

/** @internal */
export const Reason$inboundSchema: z.ZodType<Reason, z.ZodTypeDef, unknown> = z
  .object({
    code: z.string().optional(),
    description: z.string().optional(),
  });

/** @internal */
export type Reason$Outbound = {
  code?: string | undefined;
  description?: string | undefined;
};

/** @internal */
export const Reason$outboundSchema: z.ZodType<
  Reason$Outbound,
  z.ZodTypeDef,
  Reason
> = z.object({
  code: z.string().optional(),
  description: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Reason$ {
  /** @deprecated use `Reason$inboundSchema` instead. */
  export const inboundSchema = Reason$inboundSchema;
  /** @deprecated use `Reason$outboundSchema` instead. */
  export const outboundSchema = Reason$outboundSchema;
  /** @deprecated use `Reason$Outbound` instead. */
  export type Outbound = Reason$Outbound;
}

/** @internal */
export const GetChargebackSelf$inboundSchema: z.ZodType<
  GetChargebackSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetChargebackSelf$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetChargebackSelf$outboundSchema: z.ZodType<
  GetChargebackSelf$Outbound,
  z.ZodTypeDef,
  GetChargebackSelf
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackSelf$ {
  /** @deprecated use `GetChargebackSelf$inboundSchema` instead. */
  export const inboundSchema = GetChargebackSelf$inboundSchema;
  /** @deprecated use `GetChargebackSelf$outboundSchema` instead. */
  export const outboundSchema = GetChargebackSelf$outboundSchema;
  /** @deprecated use `GetChargebackSelf$Outbound` instead. */
  export type Outbound = GetChargebackSelf$Outbound;
}

/** @internal */
export const GetChargebackPayment$inboundSchema: z.ZodType<
  GetChargebackPayment,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetChargebackPayment$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetChargebackPayment$outboundSchema: z.ZodType<
  GetChargebackPayment$Outbound,
  z.ZodTypeDef,
  GetChargebackPayment
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackPayment$ {
  /** @deprecated use `GetChargebackPayment$inboundSchema` instead. */
  export const inboundSchema = GetChargebackPayment$inboundSchema;
  /** @deprecated use `GetChargebackPayment$outboundSchema` instead. */
  export const outboundSchema = GetChargebackPayment$outboundSchema;
  /** @deprecated use `GetChargebackPayment$Outbound` instead. */
  export type Outbound = GetChargebackPayment$Outbound;
}

/** @internal */
export const GetChargebackSettlement$inboundSchema: z.ZodType<
  GetChargebackSettlement,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetChargebackSettlement$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetChargebackSettlement$outboundSchema: z.ZodType<
  GetChargebackSettlement$Outbound,
  z.ZodTypeDef,
  GetChargebackSettlement
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackSettlement$ {
  /** @deprecated use `GetChargebackSettlement$inboundSchema` instead. */
  export const inboundSchema = GetChargebackSettlement$inboundSchema;
  /** @deprecated use `GetChargebackSettlement$outboundSchema` instead. */
  export const outboundSchema = GetChargebackSettlement$outboundSchema;
  /** @deprecated use `GetChargebackSettlement$Outbound` instead. */
  export type Outbound = GetChargebackSettlement$Outbound;
}

/** @internal */
export const GetChargebackDocumentation$inboundSchema: z.ZodType<
  GetChargebackDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetChargebackDocumentation$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetChargebackDocumentation$outboundSchema: z.ZodType<
  GetChargebackDocumentation$Outbound,
  z.ZodTypeDef,
  GetChargebackDocumentation
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackDocumentation$ {
  /** @deprecated use `GetChargebackDocumentation$inboundSchema` instead. */
  export const inboundSchema = GetChargebackDocumentation$inboundSchema;
  /** @deprecated use `GetChargebackDocumentation$outboundSchema` instead. */
  export const outboundSchema = GetChargebackDocumentation$outboundSchema;
  /** @deprecated use `GetChargebackDocumentation$Outbound` instead. */
  export type Outbound = GetChargebackDocumentation$Outbound;
}

/** @internal */
export const GetChargebackLinks$inboundSchema: z.ZodType<
  GetChargebackLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => GetChargebackSelf$inboundSchema).optional(),
  payment: z.lazy(() => GetChargebackPayment$inboundSchema).optional(),
  settlement: z.nullable(z.lazy(() => GetChargebackSettlement$inboundSchema))
    .optional(),
  documentation: z.lazy(() => GetChargebackDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type GetChargebackLinks$Outbound = {
  self?: GetChargebackSelf$Outbound | undefined;
  payment?: GetChargebackPayment$Outbound | undefined;
  settlement?: GetChargebackSettlement$Outbound | null | undefined;
  documentation?: GetChargebackDocumentation$Outbound | undefined;
};

/** @internal */
export const GetChargebackLinks$outboundSchema: z.ZodType<
  GetChargebackLinks$Outbound,
  z.ZodTypeDef,
  GetChargebackLinks
> = z.object({
  self: z.lazy(() => GetChargebackSelf$outboundSchema).optional(),
  payment: z.lazy(() => GetChargebackPayment$outboundSchema).optional(),
  settlement: z.nullable(z.lazy(() => GetChargebackSettlement$outboundSchema))
    .optional(),
  documentation: z.lazy(() => GetChargebackDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackLinks$ {
  /** @deprecated use `GetChargebackLinks$inboundSchema` instead. */
  export const inboundSchema = GetChargebackLinks$inboundSchema;
  /** @deprecated use `GetChargebackLinks$outboundSchema` instead. */
  export const outboundSchema = GetChargebackLinks$outboundSchema;
  /** @deprecated use `GetChargebackLinks$Outbound` instead. */
  export type Outbound = GetChargebackLinks$Outbound;
}

/** @internal */
export const GetChargebackResponseBody$inboundSchema: z.ZodType<
  GetChargebackResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().default("chargeback"),
  id: z.string().optional(),
  amount: z.lazy(() => GetChargebackAmount$inboundSchema).optional(),
  settlementAmount: z.nullable(
    z.lazy(() => GetChargebackSettlementAmount$inboundSchema),
  ).optional(),
  reason: z.nullable(z.lazy(() => Reason$inboundSchema)).optional(),
  paymentId: z.string().optional(),
  settlementId: z.nullable(z.string()).optional(),
  createdAt: z.string().optional(),
  reversedAt: z.nullable(z.string()).optional(),
  _links: z.lazy(() => GetChargebackLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type GetChargebackResponseBody$Outbound = {
  resource: string;
  id?: string | undefined;
  amount?: GetChargebackAmount$Outbound | undefined;
  settlementAmount?: GetChargebackSettlementAmount$Outbound | null | undefined;
  reason?: Reason$Outbound | null | undefined;
  paymentId?: string | undefined;
  settlementId?: string | null | undefined;
  createdAt?: string | undefined;
  reversedAt?: string | null | undefined;
  _links?: GetChargebackLinks$Outbound | undefined;
};

/** @internal */
export const GetChargebackResponseBody$outboundSchema: z.ZodType<
  GetChargebackResponseBody$Outbound,
  z.ZodTypeDef,
  GetChargebackResponseBody
> = z.object({
  resource: z.string().default("chargeback"),
  id: z.string().optional(),
  amount: z.lazy(() => GetChargebackAmount$outboundSchema).optional(),
  settlementAmount: z.nullable(
    z.lazy(() => GetChargebackSettlementAmount$outboundSchema),
  ).optional(),
  reason: z.nullable(z.lazy(() => Reason$outboundSchema)).optional(),
  paymentId: z.string().optional(),
  settlementId: z.nullable(z.string()).optional(),
  createdAt: z.string().optional(),
  reversedAt: z.nullable(z.string()).optional(),
  links: z.lazy(() => GetChargebackLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChargebackResponseBody$ {
  /** @deprecated use `GetChargebackResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetChargebackResponseBody$inboundSchema;
  /** @deprecated use `GetChargebackResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetChargebackResponseBody$outboundSchema;
  /** @deprecated use `GetChargebackResponseBody$Outbound` instead. */
  export type Outbound = GetChargebackResponseBody$Outbound;
}
