/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The amount of the payment link. If no amount is provided initially, the customer will be prompted to enter an amount.
 */
export type CreatePaymentLinkAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

export type CreatePaymentLinkRequestBody = {
  /**
   * A short description of the payment link. The description is visible in the Dashboard and will be shown on the customer's bank or card statement when possible.
   */
  description?: string | undefined;
  /**
   * The amount of the payment link. If no amount is provided initially, the customer will be prompted to enter an amount.
   */
  amount?: CreatePaymentLinkAmount | null | undefined;
  /**
   * The URL your customer will be redirected to after completing the payment process. If no redirect URL is provided, the customer will be shown a generic message after completing the payment.
   */
  redirectUrl?: string | null | undefined;
  /**
   * The webhook URL where we will send payment status updates to.
   *
   * @remarks
   *
   * The webhookUrl is optional, but without a webhook you will miss out on important status changes to any payments resulting from the payment link.
   *
   * The webhookUrl must be reachable from Mollie's point of view, so you cannot use `localhost`. If you want to use webhook during development on `localhost`, you must use a tool like ngrok to have the webhooks delivered to your local machine.
   */
  webhookUrl?: string | null | undefined;
  /**
   * The identifier referring to the [profile](get-profile) this entity belongs to.
   *
   * @remarks
   *
   * Most API credentials are linked to a single profile. In these cases the `profileId` can be omitted in the creation request. For organization-level credentials such as OAuth access tokens however, the `profileId` parameter is required.
   */
  profileId?: string | null | undefined;
  /**
   * The date and time the payment link is set to expire, in ISO 8601 format. If no expiry date was provided up front, the payment link will not expire automatically.
   */
  expiresAt?: string | null | undefined;
};

/** @internal */
export const CreatePaymentLinkAmount$inboundSchema: z.ZodType<
  CreatePaymentLinkAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type CreatePaymentLinkAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const CreatePaymentLinkAmount$outboundSchema: z.ZodType<
  CreatePaymentLinkAmount$Outbound,
  z.ZodTypeDef,
  CreatePaymentLinkAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePaymentLinkAmount$ {
  /** @deprecated use `CreatePaymentLinkAmount$inboundSchema` instead. */
  export const inboundSchema = CreatePaymentLinkAmount$inboundSchema;
  /** @deprecated use `CreatePaymentLinkAmount$outboundSchema` instead. */
  export const outboundSchema = CreatePaymentLinkAmount$outboundSchema;
  /** @deprecated use `CreatePaymentLinkAmount$Outbound` instead. */
  export type Outbound = CreatePaymentLinkAmount$Outbound;
}

/** @internal */
export const CreatePaymentLinkRequestBody$inboundSchema: z.ZodType<
  CreatePaymentLinkRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string().optional(),
  amount: z.nullable(z.lazy(() => CreatePaymentLinkAmount$inboundSchema))
    .optional(),
  redirectUrl: z.nullable(z.string()).optional(),
  webhookUrl: z.nullable(z.string()).optional(),
  profileId: z.nullable(z.string()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
});

/** @internal */
export type CreatePaymentLinkRequestBody$Outbound = {
  description?: string | undefined;
  amount?: CreatePaymentLinkAmount$Outbound | null | undefined;
  redirectUrl?: string | null | undefined;
  webhookUrl?: string | null | undefined;
  profileId?: string | null | undefined;
  expiresAt?: string | null | undefined;
};

/** @internal */
export const CreatePaymentLinkRequestBody$outboundSchema: z.ZodType<
  CreatePaymentLinkRequestBody$Outbound,
  z.ZodTypeDef,
  CreatePaymentLinkRequestBody
> = z.object({
  description: z.string().optional(),
  amount: z.nullable(z.lazy(() => CreatePaymentLinkAmount$outboundSchema))
    .optional(),
  redirectUrl: z.nullable(z.string()).optional(),
  webhookUrl: z.nullable(z.string()).optional(),
  profileId: z.nullable(z.string()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePaymentLinkRequestBody$ {
  /** @deprecated use `CreatePaymentLinkRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreatePaymentLinkRequestBody$inboundSchema;
  /** @deprecated use `CreatePaymentLinkRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreatePaymentLinkRequestBody$outboundSchema;
  /** @deprecated use `CreatePaymentLinkRequestBody$Outbound` instead. */
  export type Outbound = CreatePaymentLinkRequestBody$Outbound;
}
