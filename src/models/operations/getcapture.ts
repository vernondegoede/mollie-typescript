/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetCaptureRequest = {
  /**
   * Provide the ID of the related payment.
   */
  paymentId: string;
  /**
   * Provide the ID of the item you want to perform this operation on.
   */
  id: string;
  /**
   * This endpoint allows you to include additional information via the `include` query string parameter.
   *
   * @remarks
   *
   * * `payment`: Include the payment this capture was created for.
   */
  include?: string | null | undefined;
  /**
   * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting the `testmode` query parameter to `true`.
   *
   * @remarks
   *
   * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
   */
  testmode?: boolean | null | undefined;
};

/**
 * The amount captured. If no amount is provided, the full authorized amount is captured.
 */
export type GetCaptureAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * This optional field will contain the approximate amount that will be settled to your account, converted to the currency your account is settled in.
 *
 * @remarks
 *
 * Since the field contains an estimated amount during capture processing, it may change over time. To retrieve accurate settlement amounts we recommend using the [List balance transactions endpoint](list-balance-transactions) instead.
 */
export type GetCaptureSettlementAmount = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetCaptureSelf = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The API resource URL of the [payment](get-payment) that this capture belongs to.
 */
export type GetCapturePayment = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * The API resource URL of the [settlement](get-settlement) this capture has been settled with. Not present if not yet settled.
 */
export type GetCaptureSettlement = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetCaptureDocumentation = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type GetCaptureLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: GetCaptureSelf | undefined;
  /**
   * The API resource URL of the [payment](get-payment) that this capture belongs to.
   */
  payment?: GetCapturePayment | undefined;
  /**
   * The API resource URL of the [settlement](get-settlement) this capture has been settled with. Not present if not yet settled.
   */
  settlement?: GetCaptureSettlement | null | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: GetCaptureDocumentation | undefined;
};

/**
 * The chargeback object.
 */
export type GetCaptureResponseBody = {
  /**
   * Indicates the response contains a capture object. Will always contain the string `capture` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this capture. Example: `cpt_mNepDkEtco6ah3QNPUGYH`.
   */
  id?: string | undefined;
  /**
   * Whether this entity was created in live mode or in test mode.
   *
   * @remarks
   *
   * Possible values: `live` `test`
   */
  mode?: string | undefined;
  /**
   * The description of the capture.
   */
  description?: string | undefined;
  /**
   * The amount captured. If no amount is provided, the full authorized amount is captured.
   */
  amount?: GetCaptureAmount | null | undefined;
  /**
   * This optional field will contain the approximate amount that will be settled to your account, converted to the currency your account is settled in.
   *
   * @remarks
   *
   * Since the field contains an estimated amount during capture processing, it may change over time. To retrieve accurate settlement amounts we recommend using the [List balance transactions endpoint](list-balance-transactions) instead.
   */
  settlementAmount?: GetCaptureSettlementAmount | null | undefined;
  /**
   * The capture's status.
   *
   * @remarks
   *
   * Possible values: `pending` `succeeded` `failed`
   */
  status?: string | undefined;
  /**
   * Provide any data you like, for example a string or a JSON object. We will save the data alongside the entity. Whenever you fetch the entity with our API, we will also include the metadata. You can use up to approximately 1kB.
   */
  metadata?: string | null | undefined;
  /**
   * The unique identifier of the payment this capture was created for. For example: `tr_7UhSN1zuXS`. The full payment object can be retrieved via the payment URL in the `_links` object.
   */
  paymentId?: string | undefined;
  /**
   * The unique identifier of the shipment that triggered the creation of this capture, if applicable. For example: `shp_3wmsgCJN4U`.
   */
  shipmentId?: string | null | undefined;
  /**
   * The identifier referring to the settlement this capture was settled with. For example, `stl_BkEjN2eBb`. This field is omitted if the capture is not settled (yet).
   */
  settlementId?: string | null | undefined;
  /**
   * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  createdAt?: string | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: GetCaptureLinks | undefined;
};

/** @internal */
export const GetCaptureRequest$inboundSchema: z.ZodType<
  GetCaptureRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentId: z.string(),
  id: z.string(),
  include: z.nullable(z.string()).optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/** @internal */
export type GetCaptureRequest$Outbound = {
  paymentId: string;
  id: string;
  include?: string | null | undefined;
  testmode: boolean | null;
};

/** @internal */
export const GetCaptureRequest$outboundSchema: z.ZodType<
  GetCaptureRequest$Outbound,
  z.ZodTypeDef,
  GetCaptureRequest
> = z.object({
  paymentId: z.string(),
  id: z.string(),
  include: z.nullable(z.string()).optional(),
  testmode: z.nullable(z.boolean().default(false)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureRequest$ {
  /** @deprecated use `GetCaptureRequest$inboundSchema` instead. */
  export const inboundSchema = GetCaptureRequest$inboundSchema;
  /** @deprecated use `GetCaptureRequest$outboundSchema` instead. */
  export const outboundSchema = GetCaptureRequest$outboundSchema;
  /** @deprecated use `GetCaptureRequest$Outbound` instead. */
  export type Outbound = GetCaptureRequest$Outbound;
}

/** @internal */
export const GetCaptureAmount$inboundSchema: z.ZodType<
  GetCaptureAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type GetCaptureAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const GetCaptureAmount$outboundSchema: z.ZodType<
  GetCaptureAmount$Outbound,
  z.ZodTypeDef,
  GetCaptureAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureAmount$ {
  /** @deprecated use `GetCaptureAmount$inboundSchema` instead. */
  export const inboundSchema = GetCaptureAmount$inboundSchema;
  /** @deprecated use `GetCaptureAmount$outboundSchema` instead. */
  export const outboundSchema = GetCaptureAmount$outboundSchema;
  /** @deprecated use `GetCaptureAmount$Outbound` instead. */
  export type Outbound = GetCaptureAmount$Outbound;
}

/** @internal */
export const GetCaptureSettlementAmount$inboundSchema: z.ZodType<
  GetCaptureSettlementAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type GetCaptureSettlementAmount$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const GetCaptureSettlementAmount$outboundSchema: z.ZodType<
  GetCaptureSettlementAmount$Outbound,
  z.ZodTypeDef,
  GetCaptureSettlementAmount
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureSettlementAmount$ {
  /** @deprecated use `GetCaptureSettlementAmount$inboundSchema` instead. */
  export const inboundSchema = GetCaptureSettlementAmount$inboundSchema;
  /** @deprecated use `GetCaptureSettlementAmount$outboundSchema` instead. */
  export const outboundSchema = GetCaptureSettlementAmount$outboundSchema;
  /** @deprecated use `GetCaptureSettlementAmount$Outbound` instead. */
  export type Outbound = GetCaptureSettlementAmount$Outbound;
}

/** @internal */
export const GetCaptureSelf$inboundSchema: z.ZodType<
  GetCaptureSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetCaptureSelf$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetCaptureSelf$outboundSchema: z.ZodType<
  GetCaptureSelf$Outbound,
  z.ZodTypeDef,
  GetCaptureSelf
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureSelf$ {
  /** @deprecated use `GetCaptureSelf$inboundSchema` instead. */
  export const inboundSchema = GetCaptureSelf$inboundSchema;
  /** @deprecated use `GetCaptureSelf$outboundSchema` instead. */
  export const outboundSchema = GetCaptureSelf$outboundSchema;
  /** @deprecated use `GetCaptureSelf$Outbound` instead. */
  export type Outbound = GetCaptureSelf$Outbound;
}

/** @internal */
export const GetCapturePayment$inboundSchema: z.ZodType<
  GetCapturePayment,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetCapturePayment$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetCapturePayment$outboundSchema: z.ZodType<
  GetCapturePayment$Outbound,
  z.ZodTypeDef,
  GetCapturePayment
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCapturePayment$ {
  /** @deprecated use `GetCapturePayment$inboundSchema` instead. */
  export const inboundSchema = GetCapturePayment$inboundSchema;
  /** @deprecated use `GetCapturePayment$outboundSchema` instead. */
  export const outboundSchema = GetCapturePayment$outboundSchema;
  /** @deprecated use `GetCapturePayment$Outbound` instead. */
  export type Outbound = GetCapturePayment$Outbound;
}

/** @internal */
export const GetCaptureSettlement$inboundSchema: z.ZodType<
  GetCaptureSettlement,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetCaptureSettlement$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetCaptureSettlement$outboundSchema: z.ZodType<
  GetCaptureSettlement$Outbound,
  z.ZodTypeDef,
  GetCaptureSettlement
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureSettlement$ {
  /** @deprecated use `GetCaptureSettlement$inboundSchema` instead. */
  export const inboundSchema = GetCaptureSettlement$inboundSchema;
  /** @deprecated use `GetCaptureSettlement$outboundSchema` instead. */
  export const outboundSchema = GetCaptureSettlement$outboundSchema;
  /** @deprecated use `GetCaptureSettlement$Outbound` instead. */
  export type Outbound = GetCaptureSettlement$Outbound;
}

/** @internal */
export const GetCaptureDocumentation$inboundSchema: z.ZodType<
  GetCaptureDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type GetCaptureDocumentation$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const GetCaptureDocumentation$outboundSchema: z.ZodType<
  GetCaptureDocumentation$Outbound,
  z.ZodTypeDef,
  GetCaptureDocumentation
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureDocumentation$ {
  /** @deprecated use `GetCaptureDocumentation$inboundSchema` instead. */
  export const inboundSchema = GetCaptureDocumentation$inboundSchema;
  /** @deprecated use `GetCaptureDocumentation$outboundSchema` instead. */
  export const outboundSchema = GetCaptureDocumentation$outboundSchema;
  /** @deprecated use `GetCaptureDocumentation$Outbound` instead. */
  export type Outbound = GetCaptureDocumentation$Outbound;
}

/** @internal */
export const GetCaptureLinks$inboundSchema: z.ZodType<
  GetCaptureLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => GetCaptureSelf$inboundSchema).optional(),
  payment: z.lazy(() => GetCapturePayment$inboundSchema).optional(),
  settlement: z.nullable(z.lazy(() => GetCaptureSettlement$inboundSchema))
    .optional(),
  documentation: z.lazy(() => GetCaptureDocumentation$inboundSchema).optional(),
});

/** @internal */
export type GetCaptureLinks$Outbound = {
  self?: GetCaptureSelf$Outbound | undefined;
  payment?: GetCapturePayment$Outbound | undefined;
  settlement?: GetCaptureSettlement$Outbound | null | undefined;
  documentation?: GetCaptureDocumentation$Outbound | undefined;
};

/** @internal */
export const GetCaptureLinks$outboundSchema: z.ZodType<
  GetCaptureLinks$Outbound,
  z.ZodTypeDef,
  GetCaptureLinks
> = z.object({
  self: z.lazy(() => GetCaptureSelf$outboundSchema).optional(),
  payment: z.lazy(() => GetCapturePayment$outboundSchema).optional(),
  settlement: z.nullable(z.lazy(() => GetCaptureSettlement$outboundSchema))
    .optional(),
  documentation: z.lazy(() => GetCaptureDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureLinks$ {
  /** @deprecated use `GetCaptureLinks$inboundSchema` instead. */
  export const inboundSchema = GetCaptureLinks$inboundSchema;
  /** @deprecated use `GetCaptureLinks$outboundSchema` instead. */
  export const outboundSchema = GetCaptureLinks$outboundSchema;
  /** @deprecated use `GetCaptureLinks$Outbound` instead. */
  export type Outbound = GetCaptureLinks$Outbound;
}

/** @internal */
export const GetCaptureResponseBody$inboundSchema: z.ZodType<
  GetCaptureResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().default("capture"),
  id: z.string().optional(),
  mode: z.string().optional(),
  description: z.string().optional(),
  amount: z.nullable(z.lazy(() => GetCaptureAmount$inboundSchema)).optional(),
  settlementAmount: z.nullable(
    z.lazy(() => GetCaptureSettlementAmount$inboundSchema),
  ).optional(),
  status: z.string().optional(),
  metadata: z.nullable(z.string()).optional(),
  paymentId: z.string().optional(),
  shipmentId: z.nullable(z.string()).optional(),
  settlementId: z.nullable(z.string()).optional(),
  createdAt: z.string().optional(),
  _links: z.lazy(() => GetCaptureLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type GetCaptureResponseBody$Outbound = {
  resource: string;
  id?: string | undefined;
  mode?: string | undefined;
  description?: string | undefined;
  amount?: GetCaptureAmount$Outbound | null | undefined;
  settlementAmount?: GetCaptureSettlementAmount$Outbound | null | undefined;
  status?: string | undefined;
  metadata?: string | null | undefined;
  paymentId?: string | undefined;
  shipmentId?: string | null | undefined;
  settlementId?: string | null | undefined;
  createdAt?: string | undefined;
  _links?: GetCaptureLinks$Outbound | undefined;
};

/** @internal */
export const GetCaptureResponseBody$outboundSchema: z.ZodType<
  GetCaptureResponseBody$Outbound,
  z.ZodTypeDef,
  GetCaptureResponseBody
> = z.object({
  resource: z.string().default("capture"),
  id: z.string().optional(),
  mode: z.string().optional(),
  description: z.string().optional(),
  amount: z.nullable(z.lazy(() => GetCaptureAmount$outboundSchema)).optional(),
  settlementAmount: z.nullable(
    z.lazy(() => GetCaptureSettlementAmount$outboundSchema),
  ).optional(),
  status: z.string().optional(),
  metadata: z.nullable(z.string()).optional(),
  paymentId: z.string().optional(),
  shipmentId: z.nullable(z.string()).optional(),
  settlementId: z.nullable(z.string()).optional(),
  createdAt: z.string().optional(),
  links: z.lazy(() => GetCaptureLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCaptureResponseBody$ {
  /** @deprecated use `GetCaptureResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetCaptureResponseBody$inboundSchema;
  /** @deprecated use `GetCaptureResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetCaptureResponseBody$outboundSchema;
  /** @deprecated use `GetCaptureResponseBody$Outbound` instead. */
  export type Outbound = GetCaptureResponseBody$Outbound;
}
