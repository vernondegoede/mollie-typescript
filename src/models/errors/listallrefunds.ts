/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListAllRefundsDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListAllRefundsLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListAllRefundsDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListAllRefundsResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListAllRefundsLinks | undefined;
};

/**
 * An error response object.
 */
export class ListAllRefundsResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListAllRefundsLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListAllRefundsResponseBodyData;

  constructor(err: ListAllRefundsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListAllRefundsResponseBody";
  }
}

/** @internal */
export const ListAllRefundsDocumentation$inboundSchema: z.ZodType<
  ListAllRefundsDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListAllRefundsDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListAllRefundsDocumentation$outboundSchema: z.ZodType<
  ListAllRefundsDocumentation$Outbound,
  z.ZodTypeDef,
  ListAllRefundsDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsDocumentation$ {
  /** @deprecated use `ListAllRefundsDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsDocumentation$inboundSchema;
  /** @deprecated use `ListAllRefundsDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsDocumentation$outboundSchema;
  /** @deprecated use `ListAllRefundsDocumentation$Outbound` instead. */
  export type Outbound = ListAllRefundsDocumentation$Outbound;
}

/** @internal */
export const ListAllRefundsLinks$inboundSchema: z.ZodType<
  ListAllRefundsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => ListAllRefundsDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListAllRefundsLinks$Outbound = {
  documentation?: ListAllRefundsDocumentation$Outbound | undefined;
};

/** @internal */
export const ListAllRefundsLinks$outboundSchema: z.ZodType<
  ListAllRefundsLinks$Outbound,
  z.ZodTypeDef,
  ListAllRefundsLinks
> = z.object({
  documentation: z.lazy(() => ListAllRefundsDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsLinks$ {
  /** @deprecated use `ListAllRefundsLinks$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsLinks$inboundSchema;
  /** @deprecated use `ListAllRefundsLinks$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsLinks$outboundSchema;
  /** @deprecated use `ListAllRefundsLinks$Outbound` instead. */
  export type Outbound = ListAllRefundsLinks$Outbound;
}

/** @internal */
export const ListAllRefundsResponseBody$inboundSchema: z.ZodType<
  ListAllRefundsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListAllRefundsLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListAllRefundsResponseBody(remapped);
  });

/** @internal */
export type ListAllRefundsResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListAllRefundsLinks$Outbound | undefined;
};

/** @internal */
export const ListAllRefundsResponseBody$outboundSchema: z.ZodType<
  ListAllRefundsResponseBody$Outbound,
  z.ZodTypeDef,
  ListAllRefundsResponseBody
> = z.instanceof(ListAllRefundsResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListAllRefundsLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllRefundsResponseBody$ {
  /** @deprecated use `ListAllRefundsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListAllRefundsResponseBody$inboundSchema;
  /** @deprecated use `ListAllRefundsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListAllRefundsResponseBody$outboundSchema;
  /** @deprecated use `ListAllRefundsResponseBody$Outbound` instead. */
  export type Outbound = ListAllRefundsResponseBody$Outbound;
}
