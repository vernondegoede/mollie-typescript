/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListRefundsRefundsAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListRefundsRefundsAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListRefundsRefundsAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListRefundsRefundsAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListRefundsRefundsAPILinks | undefined;
};

/**
 * An error response object.
 */
export class ListRefundsRefundsAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListRefundsRefundsAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListRefundsRefundsAPIResponseBodyData;

  constructor(err: ListRefundsRefundsAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListRefundsRefundsAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListRefundsDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListRefundsLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListRefundsDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListRefundsResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListRefundsLinks | undefined;
};

/**
 * An error response object.
 */
export class ListRefundsResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListRefundsLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListRefundsResponseBodyData;

  constructor(err: ListRefundsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListRefundsResponseBody";
  }
}

/** @internal */
export const ListRefundsRefundsAPIDocumentation$inboundSchema: z.ZodType<
  ListRefundsRefundsAPIDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListRefundsRefundsAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListRefundsRefundsAPIDocumentation$outboundSchema: z.ZodType<
  ListRefundsRefundsAPIDocumentation$Outbound,
  z.ZodTypeDef,
  ListRefundsRefundsAPIDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRefundsRefundsAPIDocumentation$ {
  /** @deprecated use `ListRefundsRefundsAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListRefundsRefundsAPIDocumentation$inboundSchema;
  /** @deprecated use `ListRefundsRefundsAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    ListRefundsRefundsAPIDocumentation$outboundSchema;
  /** @deprecated use `ListRefundsRefundsAPIDocumentation$Outbound` instead. */
  export type Outbound = ListRefundsRefundsAPIDocumentation$Outbound;
}

/** @internal */
export const ListRefundsRefundsAPILinks$inboundSchema: z.ZodType<
  ListRefundsRefundsAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => ListRefundsRefundsAPIDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListRefundsRefundsAPILinks$Outbound = {
  documentation?: ListRefundsRefundsAPIDocumentation$Outbound | undefined;
};

/** @internal */
export const ListRefundsRefundsAPILinks$outboundSchema: z.ZodType<
  ListRefundsRefundsAPILinks$Outbound,
  z.ZodTypeDef,
  ListRefundsRefundsAPILinks
> = z.object({
  documentation: z.lazy(() => ListRefundsRefundsAPIDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRefundsRefundsAPILinks$ {
  /** @deprecated use `ListRefundsRefundsAPILinks$inboundSchema` instead. */
  export const inboundSchema = ListRefundsRefundsAPILinks$inboundSchema;
  /** @deprecated use `ListRefundsRefundsAPILinks$outboundSchema` instead. */
  export const outboundSchema = ListRefundsRefundsAPILinks$outboundSchema;
  /** @deprecated use `ListRefundsRefundsAPILinks$Outbound` instead. */
  export type Outbound = ListRefundsRefundsAPILinks$Outbound;
}

/** @internal */
export const ListRefundsRefundsAPIResponseBody$inboundSchema: z.ZodType<
  ListRefundsRefundsAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListRefundsRefundsAPILinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListRefundsRefundsAPIResponseBody(remapped);
  });

/** @internal */
export type ListRefundsRefundsAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListRefundsRefundsAPILinks$Outbound | undefined;
};

/** @internal */
export const ListRefundsRefundsAPIResponseBody$outboundSchema: z.ZodType<
  ListRefundsRefundsAPIResponseBody$Outbound,
  z.ZodTypeDef,
  ListRefundsRefundsAPIResponseBody
> = z.instanceof(ListRefundsRefundsAPIResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListRefundsRefundsAPILinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRefundsRefundsAPIResponseBody$ {
  /** @deprecated use `ListRefundsRefundsAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListRefundsRefundsAPIResponseBody$inboundSchema;
  /** @deprecated use `ListRefundsRefundsAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListRefundsRefundsAPIResponseBody$outboundSchema;
  /** @deprecated use `ListRefundsRefundsAPIResponseBody$Outbound` instead. */
  export type Outbound = ListRefundsRefundsAPIResponseBody$Outbound;
}

/** @internal */
export const ListRefundsDocumentation$inboundSchema: z.ZodType<
  ListRefundsDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListRefundsDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListRefundsDocumentation$outboundSchema: z.ZodType<
  ListRefundsDocumentation$Outbound,
  z.ZodTypeDef,
  ListRefundsDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRefundsDocumentation$ {
  /** @deprecated use `ListRefundsDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListRefundsDocumentation$inboundSchema;
  /** @deprecated use `ListRefundsDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListRefundsDocumentation$outboundSchema;
  /** @deprecated use `ListRefundsDocumentation$Outbound` instead. */
  export type Outbound = ListRefundsDocumentation$Outbound;
}

/** @internal */
export const ListRefundsLinks$inboundSchema: z.ZodType<
  ListRefundsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => ListRefundsDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListRefundsLinks$Outbound = {
  documentation?: ListRefundsDocumentation$Outbound | undefined;
};

/** @internal */
export const ListRefundsLinks$outboundSchema: z.ZodType<
  ListRefundsLinks$Outbound,
  z.ZodTypeDef,
  ListRefundsLinks
> = z.object({
  documentation: z.lazy(() => ListRefundsDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRefundsLinks$ {
  /** @deprecated use `ListRefundsLinks$inboundSchema` instead. */
  export const inboundSchema = ListRefundsLinks$inboundSchema;
  /** @deprecated use `ListRefundsLinks$outboundSchema` instead. */
  export const outboundSchema = ListRefundsLinks$outboundSchema;
  /** @deprecated use `ListRefundsLinks$Outbound` instead. */
  export type Outbound = ListRefundsLinks$Outbound;
}

/** @internal */
export const ListRefundsResponseBody$inboundSchema: z.ZodType<
  ListRefundsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListRefundsLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListRefundsResponseBody(remapped);
  });

/** @internal */
export type ListRefundsResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListRefundsLinks$Outbound | undefined;
};

/** @internal */
export const ListRefundsResponseBody$outboundSchema: z.ZodType<
  ListRefundsResponseBody$Outbound,
  z.ZodTypeDef,
  ListRefundsResponseBody
> = z.instanceof(ListRefundsResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListRefundsLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRefundsResponseBody$ {
  /** @deprecated use `ListRefundsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListRefundsResponseBody$inboundSchema;
  /** @deprecated use `ListRefundsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListRefundsResponseBody$outboundSchema;
  /** @deprecated use `ListRefundsResponseBody$Outbound` instead. */
  export type Outbound = ListRefundsResponseBody$Outbound;
}
