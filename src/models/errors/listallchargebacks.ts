/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListAllChargebacksChargebacksAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListAllChargebacksChargebacksAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListAllChargebacksChargebacksAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListAllChargebacksChargebacksAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListAllChargebacksChargebacksAPILinks | undefined;
};

/**
 * An error response object.
 */
export class ListAllChargebacksChargebacksAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListAllChargebacksChargebacksAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListAllChargebacksChargebacksAPIResponseBodyData;

  constructor(err: ListAllChargebacksChargebacksAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListAllChargebacksChargebacksAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListAllChargebacksDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListAllChargebacksLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListAllChargebacksDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListAllChargebacksResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListAllChargebacksLinks | undefined;
};

/**
 * An error response object.
 */
export class ListAllChargebacksResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListAllChargebacksLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListAllChargebacksResponseBodyData;

  constructor(err: ListAllChargebacksResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListAllChargebacksResponseBody";
  }
}

/** @internal */
export const ListAllChargebacksChargebacksAPIDocumentation$inboundSchema:
  z.ZodType<
    ListAllChargebacksChargebacksAPIDocumentation,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.any(),
    type: z.any(),
  });

/** @internal */
export type ListAllChargebacksChargebacksAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListAllChargebacksChargebacksAPIDocumentation$outboundSchema:
  z.ZodType<
    ListAllChargebacksChargebacksAPIDocumentation$Outbound,
    z.ZodTypeDef,
    ListAllChargebacksChargebacksAPIDocumentation
  > = z.object({
    href: z.any(),
    type: z.any(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllChargebacksChargebacksAPIDocumentation$ {
  /** @deprecated use `ListAllChargebacksChargebacksAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    ListAllChargebacksChargebacksAPIDocumentation$inboundSchema;
  /** @deprecated use `ListAllChargebacksChargebacksAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    ListAllChargebacksChargebacksAPIDocumentation$outboundSchema;
  /** @deprecated use `ListAllChargebacksChargebacksAPIDocumentation$Outbound` instead. */
  export type Outbound = ListAllChargebacksChargebacksAPIDocumentation$Outbound;
}

/** @internal */
export const ListAllChargebacksChargebacksAPILinks$inboundSchema: z.ZodType<
  ListAllChargebacksChargebacksAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    ListAllChargebacksChargebacksAPIDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type ListAllChargebacksChargebacksAPILinks$Outbound = {
  documentation?:
    | ListAllChargebacksChargebacksAPIDocumentation$Outbound
    | undefined;
};

/** @internal */
export const ListAllChargebacksChargebacksAPILinks$outboundSchema: z.ZodType<
  ListAllChargebacksChargebacksAPILinks$Outbound,
  z.ZodTypeDef,
  ListAllChargebacksChargebacksAPILinks
> = z.object({
  documentation: z.lazy(() =>
    ListAllChargebacksChargebacksAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllChargebacksChargebacksAPILinks$ {
  /** @deprecated use `ListAllChargebacksChargebacksAPILinks$inboundSchema` instead. */
  export const inboundSchema =
    ListAllChargebacksChargebacksAPILinks$inboundSchema;
  /** @deprecated use `ListAllChargebacksChargebacksAPILinks$outboundSchema` instead. */
  export const outboundSchema =
    ListAllChargebacksChargebacksAPILinks$outboundSchema;
  /** @deprecated use `ListAllChargebacksChargebacksAPILinks$Outbound` instead. */
  export type Outbound = ListAllChargebacksChargebacksAPILinks$Outbound;
}

/** @internal */
export const ListAllChargebacksChargebacksAPIResponseBody$inboundSchema:
  z.ZodType<
    ListAllChargebacksChargebacksAPIResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status: z.number().int().optional(),
    title: z.string().optional(),
    detail: z.string().optional(),
    field: z.nullable(z.string()).optional(),
    _links: z.lazy(() => ListAllChargebacksChargebacksAPILinks$inboundSchema)
      .optional(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "_links": "links",
      });

      return new ListAllChargebacksChargebacksAPIResponseBody(remapped);
    });

/** @internal */
export type ListAllChargebacksChargebacksAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListAllChargebacksChargebacksAPILinks$Outbound | undefined;
};

/** @internal */
export const ListAllChargebacksChargebacksAPIResponseBody$outboundSchema:
  z.ZodType<
    ListAllChargebacksChargebacksAPIResponseBody$Outbound,
    z.ZodTypeDef,
    ListAllChargebacksChargebacksAPIResponseBody
  > = z.instanceof(ListAllChargebacksChargebacksAPIResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        status: z.number().int().optional(),
        title: z.string().optional(),
        detail: z.string().optional(),
        field: z.nullable(z.string()).optional(),
        links: z.lazy(() =>
          ListAllChargebacksChargebacksAPILinks$outboundSchema
        ).optional(),
      }).transform((v) => {
        return remap$(v, {
          links: "_links",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllChargebacksChargebacksAPIResponseBody$ {
  /** @deprecated use `ListAllChargebacksChargebacksAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ListAllChargebacksChargebacksAPIResponseBody$inboundSchema;
  /** @deprecated use `ListAllChargebacksChargebacksAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListAllChargebacksChargebacksAPIResponseBody$outboundSchema;
  /** @deprecated use `ListAllChargebacksChargebacksAPIResponseBody$Outbound` instead. */
  export type Outbound = ListAllChargebacksChargebacksAPIResponseBody$Outbound;
}

/** @internal */
export const ListAllChargebacksDocumentation$inboundSchema: z.ZodType<
  ListAllChargebacksDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListAllChargebacksDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListAllChargebacksDocumentation$outboundSchema: z.ZodType<
  ListAllChargebacksDocumentation$Outbound,
  z.ZodTypeDef,
  ListAllChargebacksDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllChargebacksDocumentation$ {
  /** @deprecated use `ListAllChargebacksDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListAllChargebacksDocumentation$inboundSchema;
  /** @deprecated use `ListAllChargebacksDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListAllChargebacksDocumentation$outboundSchema;
  /** @deprecated use `ListAllChargebacksDocumentation$Outbound` instead. */
  export type Outbound = ListAllChargebacksDocumentation$Outbound;
}

/** @internal */
export const ListAllChargebacksLinks$inboundSchema: z.ZodType<
  ListAllChargebacksLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => ListAllChargebacksDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListAllChargebacksLinks$Outbound = {
  documentation?: ListAllChargebacksDocumentation$Outbound | undefined;
};

/** @internal */
export const ListAllChargebacksLinks$outboundSchema: z.ZodType<
  ListAllChargebacksLinks$Outbound,
  z.ZodTypeDef,
  ListAllChargebacksLinks
> = z.object({
  documentation: z.lazy(() => ListAllChargebacksDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllChargebacksLinks$ {
  /** @deprecated use `ListAllChargebacksLinks$inboundSchema` instead. */
  export const inboundSchema = ListAllChargebacksLinks$inboundSchema;
  /** @deprecated use `ListAllChargebacksLinks$outboundSchema` instead. */
  export const outboundSchema = ListAllChargebacksLinks$outboundSchema;
  /** @deprecated use `ListAllChargebacksLinks$Outbound` instead. */
  export type Outbound = ListAllChargebacksLinks$Outbound;
}

/** @internal */
export const ListAllChargebacksResponseBody$inboundSchema: z.ZodType<
  ListAllChargebacksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListAllChargebacksLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListAllChargebacksResponseBody(remapped);
  });

/** @internal */
export type ListAllChargebacksResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListAllChargebacksLinks$Outbound | undefined;
};

/** @internal */
export const ListAllChargebacksResponseBody$outboundSchema: z.ZodType<
  ListAllChargebacksResponseBody$Outbound,
  z.ZodTypeDef,
  ListAllChargebacksResponseBody
> = z.instanceof(ListAllChargebacksResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListAllChargebacksLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAllChargebacksResponseBody$ {
  /** @deprecated use `ListAllChargebacksResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListAllChargebacksResponseBody$inboundSchema;
  /** @deprecated use `ListAllChargebacksResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListAllChargebacksResponseBody$outboundSchema;
  /** @deprecated use `ListAllChargebacksResponseBody$Outbound` instead. */
  export type Outbound = ListAllChargebacksResponseBody$Outbound;
}
