/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type UpdatePaymentPaymentsAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type UpdatePaymentPaymentsAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: UpdatePaymentPaymentsAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type UpdatePaymentPaymentsAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: UpdatePaymentPaymentsAPILinks | undefined;
};

/**
 * An error response object.
 */
export class UpdatePaymentPaymentsAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: UpdatePaymentPaymentsAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: UpdatePaymentPaymentsAPIResponseBodyData;

  constructor(err: UpdatePaymentPaymentsAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "UpdatePaymentPaymentsAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type UpdatePaymentDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type UpdatePaymentLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: UpdatePaymentDocumentation | undefined;
};

/**
 * An error response object.
 */
export type UpdatePaymentResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: UpdatePaymentLinks | undefined;
};

/**
 * An error response object.
 */
export class UpdatePaymentResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: UpdatePaymentLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: UpdatePaymentResponseBodyData;

  constructor(err: UpdatePaymentResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "UpdatePaymentResponseBody";
  }
}

/** @internal */
export const UpdatePaymentPaymentsAPIDocumentation$inboundSchema: z.ZodType<
  UpdatePaymentPaymentsAPIDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type UpdatePaymentPaymentsAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const UpdatePaymentPaymentsAPIDocumentation$outboundSchema: z.ZodType<
  UpdatePaymentPaymentsAPIDocumentation$Outbound,
  z.ZodTypeDef,
  UpdatePaymentPaymentsAPIDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePaymentPaymentsAPIDocumentation$ {
  /** @deprecated use `UpdatePaymentPaymentsAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePaymentPaymentsAPIDocumentation$inboundSchema;
  /** @deprecated use `UpdatePaymentPaymentsAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePaymentPaymentsAPIDocumentation$outboundSchema;
  /** @deprecated use `UpdatePaymentPaymentsAPIDocumentation$Outbound` instead. */
  export type Outbound = UpdatePaymentPaymentsAPIDocumentation$Outbound;
}

/** @internal */
export const UpdatePaymentPaymentsAPILinks$inboundSchema: z.ZodType<
  UpdatePaymentPaymentsAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    UpdatePaymentPaymentsAPIDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type UpdatePaymentPaymentsAPILinks$Outbound = {
  documentation?: UpdatePaymentPaymentsAPIDocumentation$Outbound | undefined;
};

/** @internal */
export const UpdatePaymentPaymentsAPILinks$outboundSchema: z.ZodType<
  UpdatePaymentPaymentsAPILinks$Outbound,
  z.ZodTypeDef,
  UpdatePaymentPaymentsAPILinks
> = z.object({
  documentation: z.lazy(() =>
    UpdatePaymentPaymentsAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePaymentPaymentsAPILinks$ {
  /** @deprecated use `UpdatePaymentPaymentsAPILinks$inboundSchema` instead. */
  export const inboundSchema = UpdatePaymentPaymentsAPILinks$inboundSchema;
  /** @deprecated use `UpdatePaymentPaymentsAPILinks$outboundSchema` instead. */
  export const outboundSchema = UpdatePaymentPaymentsAPILinks$outboundSchema;
  /** @deprecated use `UpdatePaymentPaymentsAPILinks$Outbound` instead. */
  export type Outbound = UpdatePaymentPaymentsAPILinks$Outbound;
}

/** @internal */
export const UpdatePaymentPaymentsAPIResponseBody$inboundSchema: z.ZodType<
  UpdatePaymentPaymentsAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => UpdatePaymentPaymentsAPILinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new UpdatePaymentPaymentsAPIResponseBody(remapped);
  });

/** @internal */
export type UpdatePaymentPaymentsAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: UpdatePaymentPaymentsAPILinks$Outbound | undefined;
};

/** @internal */
export const UpdatePaymentPaymentsAPIResponseBody$outboundSchema: z.ZodType<
  UpdatePaymentPaymentsAPIResponseBody$Outbound,
  z.ZodTypeDef,
  UpdatePaymentPaymentsAPIResponseBody
> = z.instanceof(UpdatePaymentPaymentsAPIResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => UpdatePaymentPaymentsAPILinks$outboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePaymentPaymentsAPIResponseBody$ {
  /** @deprecated use `UpdatePaymentPaymentsAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePaymentPaymentsAPIResponseBody$inboundSchema;
  /** @deprecated use `UpdatePaymentPaymentsAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePaymentPaymentsAPIResponseBody$outboundSchema;
  /** @deprecated use `UpdatePaymentPaymentsAPIResponseBody$Outbound` instead. */
  export type Outbound = UpdatePaymentPaymentsAPIResponseBody$Outbound;
}

/** @internal */
export const UpdatePaymentDocumentation$inboundSchema: z.ZodType<
  UpdatePaymentDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type UpdatePaymentDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const UpdatePaymentDocumentation$outboundSchema: z.ZodType<
  UpdatePaymentDocumentation$Outbound,
  z.ZodTypeDef,
  UpdatePaymentDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePaymentDocumentation$ {
  /** @deprecated use `UpdatePaymentDocumentation$inboundSchema` instead. */
  export const inboundSchema = UpdatePaymentDocumentation$inboundSchema;
  /** @deprecated use `UpdatePaymentDocumentation$outboundSchema` instead. */
  export const outboundSchema = UpdatePaymentDocumentation$outboundSchema;
  /** @deprecated use `UpdatePaymentDocumentation$Outbound` instead. */
  export type Outbound = UpdatePaymentDocumentation$Outbound;
}

/** @internal */
export const UpdatePaymentLinks$inboundSchema: z.ZodType<
  UpdatePaymentLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => UpdatePaymentDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type UpdatePaymentLinks$Outbound = {
  documentation?: UpdatePaymentDocumentation$Outbound | undefined;
};

/** @internal */
export const UpdatePaymentLinks$outboundSchema: z.ZodType<
  UpdatePaymentLinks$Outbound,
  z.ZodTypeDef,
  UpdatePaymentLinks
> = z.object({
  documentation: z.lazy(() => UpdatePaymentDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePaymentLinks$ {
  /** @deprecated use `UpdatePaymentLinks$inboundSchema` instead. */
  export const inboundSchema = UpdatePaymentLinks$inboundSchema;
  /** @deprecated use `UpdatePaymentLinks$outboundSchema` instead. */
  export const outboundSchema = UpdatePaymentLinks$outboundSchema;
  /** @deprecated use `UpdatePaymentLinks$Outbound` instead. */
  export type Outbound = UpdatePaymentLinks$Outbound;
}

/** @internal */
export const UpdatePaymentResponseBody$inboundSchema: z.ZodType<
  UpdatePaymentResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => UpdatePaymentLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new UpdatePaymentResponseBody(remapped);
  });

/** @internal */
export type UpdatePaymentResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: UpdatePaymentLinks$Outbound | undefined;
};

/** @internal */
export const UpdatePaymentResponseBody$outboundSchema: z.ZodType<
  UpdatePaymentResponseBody$Outbound,
  z.ZodTypeDef,
  UpdatePaymentResponseBody
> = z.instanceof(UpdatePaymentResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => UpdatePaymentLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePaymentResponseBody$ {
  /** @deprecated use `UpdatePaymentResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePaymentResponseBody$inboundSchema;
  /** @deprecated use `UpdatePaymentResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePaymentResponseBody$outboundSchema;
  /** @deprecated use `UpdatePaymentResponseBody$Outbound` instead. */
  export type Outbound = UpdatePaymentResponseBody$Outbound;
}
