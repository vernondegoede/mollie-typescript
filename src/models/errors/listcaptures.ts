/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListCapturesCapturesAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListCapturesCapturesAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListCapturesCapturesAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListCapturesCapturesAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListCapturesCapturesAPILinks | undefined;
};

/**
 * An error response object.
 */
export class ListCapturesCapturesAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListCapturesCapturesAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListCapturesCapturesAPIResponseBodyData;

  constructor(err: ListCapturesCapturesAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListCapturesCapturesAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListCapturesDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListCapturesLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListCapturesDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListCapturesResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListCapturesLinks | undefined;
};

/**
 * An error response object.
 */
export class ListCapturesResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListCapturesLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListCapturesResponseBodyData;

  constructor(err: ListCapturesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListCapturesResponseBody";
  }
}

/** @internal */
export const ListCapturesCapturesAPIDocumentation$inboundSchema: z.ZodType<
  ListCapturesCapturesAPIDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListCapturesCapturesAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListCapturesCapturesAPIDocumentation$outboundSchema: z.ZodType<
  ListCapturesCapturesAPIDocumentation$Outbound,
  z.ZodTypeDef,
  ListCapturesCapturesAPIDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCapturesCapturesAPIDocumentation$ {
  /** @deprecated use `ListCapturesCapturesAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    ListCapturesCapturesAPIDocumentation$inboundSchema;
  /** @deprecated use `ListCapturesCapturesAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    ListCapturesCapturesAPIDocumentation$outboundSchema;
  /** @deprecated use `ListCapturesCapturesAPIDocumentation$Outbound` instead. */
  export type Outbound = ListCapturesCapturesAPIDocumentation$Outbound;
}

/** @internal */
export const ListCapturesCapturesAPILinks$inboundSchema: z.ZodType<
  ListCapturesCapturesAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    ListCapturesCapturesAPIDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type ListCapturesCapturesAPILinks$Outbound = {
  documentation?: ListCapturesCapturesAPIDocumentation$Outbound | undefined;
};

/** @internal */
export const ListCapturesCapturesAPILinks$outboundSchema: z.ZodType<
  ListCapturesCapturesAPILinks$Outbound,
  z.ZodTypeDef,
  ListCapturesCapturesAPILinks
> = z.object({
  documentation: z.lazy(() =>
    ListCapturesCapturesAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCapturesCapturesAPILinks$ {
  /** @deprecated use `ListCapturesCapturesAPILinks$inboundSchema` instead. */
  export const inboundSchema = ListCapturesCapturesAPILinks$inboundSchema;
  /** @deprecated use `ListCapturesCapturesAPILinks$outboundSchema` instead. */
  export const outboundSchema = ListCapturesCapturesAPILinks$outboundSchema;
  /** @deprecated use `ListCapturesCapturesAPILinks$Outbound` instead. */
  export type Outbound = ListCapturesCapturesAPILinks$Outbound;
}

/** @internal */
export const ListCapturesCapturesAPIResponseBody$inboundSchema: z.ZodType<
  ListCapturesCapturesAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListCapturesCapturesAPILinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListCapturesCapturesAPIResponseBody(remapped);
  });

/** @internal */
export type ListCapturesCapturesAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListCapturesCapturesAPILinks$Outbound | undefined;
};

/** @internal */
export const ListCapturesCapturesAPIResponseBody$outboundSchema: z.ZodType<
  ListCapturesCapturesAPIResponseBody$Outbound,
  z.ZodTypeDef,
  ListCapturesCapturesAPIResponseBody
> = z.instanceof(ListCapturesCapturesAPIResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListCapturesCapturesAPILinks$outboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCapturesCapturesAPIResponseBody$ {
  /** @deprecated use `ListCapturesCapturesAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ListCapturesCapturesAPIResponseBody$inboundSchema;
  /** @deprecated use `ListCapturesCapturesAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListCapturesCapturesAPIResponseBody$outboundSchema;
  /** @deprecated use `ListCapturesCapturesAPIResponseBody$Outbound` instead. */
  export type Outbound = ListCapturesCapturesAPIResponseBody$Outbound;
}

/** @internal */
export const ListCapturesDocumentation$inboundSchema: z.ZodType<
  ListCapturesDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListCapturesDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListCapturesDocumentation$outboundSchema: z.ZodType<
  ListCapturesDocumentation$Outbound,
  z.ZodTypeDef,
  ListCapturesDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCapturesDocumentation$ {
  /** @deprecated use `ListCapturesDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListCapturesDocumentation$inboundSchema;
  /** @deprecated use `ListCapturesDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListCapturesDocumentation$outboundSchema;
  /** @deprecated use `ListCapturesDocumentation$Outbound` instead. */
  export type Outbound = ListCapturesDocumentation$Outbound;
}

/** @internal */
export const ListCapturesLinks$inboundSchema: z.ZodType<
  ListCapturesLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => ListCapturesDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListCapturesLinks$Outbound = {
  documentation?: ListCapturesDocumentation$Outbound | undefined;
};

/** @internal */
export const ListCapturesLinks$outboundSchema: z.ZodType<
  ListCapturesLinks$Outbound,
  z.ZodTypeDef,
  ListCapturesLinks
> = z.object({
  documentation: z.lazy(() => ListCapturesDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCapturesLinks$ {
  /** @deprecated use `ListCapturesLinks$inboundSchema` instead. */
  export const inboundSchema = ListCapturesLinks$inboundSchema;
  /** @deprecated use `ListCapturesLinks$outboundSchema` instead. */
  export const outboundSchema = ListCapturesLinks$outboundSchema;
  /** @deprecated use `ListCapturesLinks$Outbound` instead. */
  export type Outbound = ListCapturesLinks$Outbound;
}

/** @internal */
export const ListCapturesResponseBody$inboundSchema: z.ZodType<
  ListCapturesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListCapturesLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListCapturesResponseBody(remapped);
  });

/** @internal */
export type ListCapturesResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListCapturesLinks$Outbound | undefined;
};

/** @internal */
export const ListCapturesResponseBody$outboundSchema: z.ZodType<
  ListCapturesResponseBody$Outbound,
  z.ZodTypeDef,
  ListCapturesResponseBody
> = z.instanceof(ListCapturesResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListCapturesLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCapturesResponseBody$ {
  /** @deprecated use `ListCapturesResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListCapturesResponseBody$inboundSchema;
  /** @deprecated use `ListCapturesResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListCapturesResponseBody$outboundSchema;
  /** @deprecated use `ListCapturesResponseBody$Outbound` instead. */
  export type Outbound = ListCapturesResponseBody$Outbound;
}
