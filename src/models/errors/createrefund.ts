/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateRefundRefundsAPIResponseDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateRefundRefundsAPIResponseLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateRefundRefundsAPIResponseDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateRefundRefundsAPIResponseResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateRefundRefundsAPIResponseLinks | undefined;
};

/**
 * An error response object.
 */
export class CreateRefundRefundsAPIResponseResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateRefundRefundsAPIResponseLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateRefundRefundsAPIResponseResponseBodyData;

  constructor(err: CreateRefundRefundsAPIResponseResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateRefundRefundsAPIResponseResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateRefundRefundsAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateRefundRefundsAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateRefundRefundsAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateRefundRefundsAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateRefundRefundsAPILinks | undefined;
};

/**
 * An error response object.
 */
export class CreateRefundRefundsAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateRefundRefundsAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateRefundRefundsAPIResponseBodyData;

  constructor(err: CreateRefundRefundsAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateRefundRefundsAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateRefundDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateRefundLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateRefundDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateRefundResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateRefundLinks | undefined;
};

/**
 * An error response object.
 */
export class CreateRefundResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateRefundLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateRefundResponseBodyData;

  constructor(err: CreateRefundResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateRefundResponseBody";
  }
}

/** @internal */
export const CreateRefundRefundsAPIResponseDocumentation$inboundSchema:
  z.ZodType<
    CreateRefundRefundsAPIResponseDocumentation,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.any(),
    type: z.any(),
  });

/** @internal */
export type CreateRefundRefundsAPIResponseDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateRefundRefundsAPIResponseDocumentation$outboundSchema:
  z.ZodType<
    CreateRefundRefundsAPIResponseDocumentation$Outbound,
    z.ZodTypeDef,
    CreateRefundRefundsAPIResponseDocumentation
  > = z.object({
    href: z.any(),
    type: z.any(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundRefundsAPIResponseDocumentation$ {
  /** @deprecated use `CreateRefundRefundsAPIResponseDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    CreateRefundRefundsAPIResponseDocumentation$inboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    CreateRefundRefundsAPIResponseDocumentation$outboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseDocumentation$Outbound` instead. */
  export type Outbound = CreateRefundRefundsAPIResponseDocumentation$Outbound;
}

/** @internal */
export const CreateRefundRefundsAPIResponseLinks$inboundSchema: z.ZodType<
  CreateRefundRefundsAPIResponseLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    CreateRefundRefundsAPIResponseDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type CreateRefundRefundsAPIResponseLinks$Outbound = {
  documentation?:
    | CreateRefundRefundsAPIResponseDocumentation$Outbound
    | undefined;
};

/** @internal */
export const CreateRefundRefundsAPIResponseLinks$outboundSchema: z.ZodType<
  CreateRefundRefundsAPIResponseLinks$Outbound,
  z.ZodTypeDef,
  CreateRefundRefundsAPIResponseLinks
> = z.object({
  documentation: z.lazy(() =>
    CreateRefundRefundsAPIResponseDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundRefundsAPIResponseLinks$ {
  /** @deprecated use `CreateRefundRefundsAPIResponseLinks$inboundSchema` instead. */
  export const inboundSchema =
    CreateRefundRefundsAPIResponseLinks$inboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseLinks$outboundSchema` instead. */
  export const outboundSchema =
    CreateRefundRefundsAPIResponseLinks$outboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseLinks$Outbound` instead. */
  export type Outbound = CreateRefundRefundsAPIResponseLinks$Outbound;
}

/** @internal */
export const CreateRefundRefundsAPIResponseResponseBody$inboundSchema:
  z.ZodType<CreateRefundRefundsAPIResponseResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      _links: z.lazy(() => CreateRefundRefundsAPIResponseLinks$inboundSchema)
        .optional(),
    })
      .transform((v) => {
        const remapped = remap$(v, {
          "_links": "links",
        });

        return new CreateRefundRefundsAPIResponseResponseBody(remapped);
      });

/** @internal */
export type CreateRefundRefundsAPIResponseResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateRefundRefundsAPIResponseLinks$Outbound | undefined;
};

/** @internal */
export const CreateRefundRefundsAPIResponseResponseBody$outboundSchema:
  z.ZodType<
    CreateRefundRefundsAPIResponseResponseBody$Outbound,
    z.ZodTypeDef,
    CreateRefundRefundsAPIResponseResponseBody
  > = z.instanceof(CreateRefundRefundsAPIResponseResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        status: z.number().int().optional(),
        title: z.string().optional(),
        detail: z.string().optional(),
        field: z.nullable(z.string()).optional(),
        links: z.lazy(() => CreateRefundRefundsAPIResponseLinks$outboundSchema)
          .optional(),
      }).transform((v) => {
        return remap$(v, {
          links: "_links",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundRefundsAPIResponseResponseBody$ {
  /** @deprecated use `CreateRefundRefundsAPIResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateRefundRefundsAPIResponseResponseBody$inboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateRefundRefundsAPIResponseResponseBody$outboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseResponseBody$Outbound` instead. */
  export type Outbound = CreateRefundRefundsAPIResponseResponseBody$Outbound;
}

/** @internal */
export const CreateRefundRefundsAPIDocumentation$inboundSchema: z.ZodType<
  CreateRefundRefundsAPIDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type CreateRefundRefundsAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateRefundRefundsAPIDocumentation$outboundSchema: z.ZodType<
  CreateRefundRefundsAPIDocumentation$Outbound,
  z.ZodTypeDef,
  CreateRefundRefundsAPIDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundRefundsAPIDocumentation$ {
  /** @deprecated use `CreateRefundRefundsAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    CreateRefundRefundsAPIDocumentation$inboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    CreateRefundRefundsAPIDocumentation$outboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIDocumentation$Outbound` instead. */
  export type Outbound = CreateRefundRefundsAPIDocumentation$Outbound;
}

/** @internal */
export const CreateRefundRefundsAPILinks$inboundSchema: z.ZodType<
  CreateRefundRefundsAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => CreateRefundRefundsAPIDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateRefundRefundsAPILinks$Outbound = {
  documentation?: CreateRefundRefundsAPIDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateRefundRefundsAPILinks$outboundSchema: z.ZodType<
  CreateRefundRefundsAPILinks$Outbound,
  z.ZodTypeDef,
  CreateRefundRefundsAPILinks
> = z.object({
  documentation: z.lazy(() =>
    CreateRefundRefundsAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundRefundsAPILinks$ {
  /** @deprecated use `CreateRefundRefundsAPILinks$inboundSchema` instead. */
  export const inboundSchema = CreateRefundRefundsAPILinks$inboundSchema;
  /** @deprecated use `CreateRefundRefundsAPILinks$outboundSchema` instead. */
  export const outboundSchema = CreateRefundRefundsAPILinks$outboundSchema;
  /** @deprecated use `CreateRefundRefundsAPILinks$Outbound` instead. */
  export type Outbound = CreateRefundRefundsAPILinks$Outbound;
}

/** @internal */
export const CreateRefundRefundsAPIResponseBody$inboundSchema: z.ZodType<
  CreateRefundRefundsAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => CreateRefundRefundsAPILinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new CreateRefundRefundsAPIResponseBody(remapped);
  });

/** @internal */
export type CreateRefundRefundsAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateRefundRefundsAPILinks$Outbound | undefined;
};

/** @internal */
export const CreateRefundRefundsAPIResponseBody$outboundSchema: z.ZodType<
  CreateRefundRefundsAPIResponseBody$Outbound,
  z.ZodTypeDef,
  CreateRefundRefundsAPIResponseBody
> = z.instanceof(CreateRefundRefundsAPIResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => CreateRefundRefundsAPILinks$outboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundRefundsAPIResponseBody$ {
  /** @deprecated use `CreateRefundRefundsAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateRefundRefundsAPIResponseBody$inboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateRefundRefundsAPIResponseBody$outboundSchema;
  /** @deprecated use `CreateRefundRefundsAPIResponseBody$Outbound` instead. */
  export type Outbound = CreateRefundRefundsAPIResponseBody$Outbound;
}

/** @internal */
export const CreateRefundDocumentation$inboundSchema: z.ZodType<
  CreateRefundDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type CreateRefundDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateRefundDocumentation$outboundSchema: z.ZodType<
  CreateRefundDocumentation$Outbound,
  z.ZodTypeDef,
  CreateRefundDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundDocumentation$ {
  /** @deprecated use `CreateRefundDocumentation$inboundSchema` instead. */
  export const inboundSchema = CreateRefundDocumentation$inboundSchema;
  /** @deprecated use `CreateRefundDocumentation$outboundSchema` instead. */
  export const outboundSchema = CreateRefundDocumentation$outboundSchema;
  /** @deprecated use `CreateRefundDocumentation$Outbound` instead. */
  export type Outbound = CreateRefundDocumentation$Outbound;
}

/** @internal */
export const CreateRefundLinks$inboundSchema: z.ZodType<
  CreateRefundLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => CreateRefundDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateRefundLinks$Outbound = {
  documentation?: CreateRefundDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateRefundLinks$outboundSchema: z.ZodType<
  CreateRefundLinks$Outbound,
  z.ZodTypeDef,
  CreateRefundLinks
> = z.object({
  documentation: z.lazy(() => CreateRefundDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundLinks$ {
  /** @deprecated use `CreateRefundLinks$inboundSchema` instead. */
  export const inboundSchema = CreateRefundLinks$inboundSchema;
  /** @deprecated use `CreateRefundLinks$outboundSchema` instead. */
  export const outboundSchema = CreateRefundLinks$outboundSchema;
  /** @deprecated use `CreateRefundLinks$Outbound` instead. */
  export type Outbound = CreateRefundLinks$Outbound;
}

/** @internal */
export const CreateRefundResponseBody$inboundSchema: z.ZodType<
  CreateRefundResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => CreateRefundLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new CreateRefundResponseBody(remapped);
  });

/** @internal */
export type CreateRefundResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateRefundLinks$Outbound | undefined;
};

/** @internal */
export const CreateRefundResponseBody$outboundSchema: z.ZodType<
  CreateRefundResponseBody$Outbound,
  z.ZodTypeDef,
  CreateRefundResponseBody
> = z.instanceof(CreateRefundResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => CreateRefundLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateRefundResponseBody$ {
  /** @deprecated use `CreateRefundResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateRefundResponseBody$inboundSchema;
  /** @deprecated use `CreateRefundResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateRefundResponseBody$outboundSchema;
  /** @deprecated use `CreateRefundResponseBody$Outbound` instead. */
  export type Outbound = CreateRefundResponseBody$Outbound;
}
