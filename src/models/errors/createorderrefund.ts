/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateOrderRefundRefundsAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateOrderRefundRefundsAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateOrderRefundRefundsAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateOrderRefundRefundsAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateOrderRefundRefundsAPILinks | undefined;
};

/**
 * An error response object.
 */
export class CreateOrderRefundRefundsAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateOrderRefundRefundsAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateOrderRefundRefundsAPIResponseBodyData;

  constructor(err: CreateOrderRefundRefundsAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateOrderRefundRefundsAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateOrderRefundDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateOrderRefundLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateOrderRefundDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateOrderRefundResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateOrderRefundLinks | undefined;
};

/**
 * An error response object.
 */
export class CreateOrderRefundResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateOrderRefundLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateOrderRefundResponseBodyData;

  constructor(err: CreateOrderRefundResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateOrderRefundResponseBody";
  }
}

/** @internal */
export const CreateOrderRefundRefundsAPIDocumentation$inboundSchema: z.ZodType<
  CreateOrderRefundRefundsAPIDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type CreateOrderRefundRefundsAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateOrderRefundRefundsAPIDocumentation$outboundSchema: z.ZodType<
  CreateOrderRefundRefundsAPIDocumentation$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundRefundsAPIDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundRefundsAPIDocumentation$ {
  /** @deprecated use `CreateOrderRefundRefundsAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    CreateOrderRefundRefundsAPIDocumentation$inboundSchema;
  /** @deprecated use `CreateOrderRefundRefundsAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    CreateOrderRefundRefundsAPIDocumentation$outboundSchema;
  /** @deprecated use `CreateOrderRefundRefundsAPIDocumentation$Outbound` instead. */
  export type Outbound = CreateOrderRefundRefundsAPIDocumentation$Outbound;
}

/** @internal */
export const CreateOrderRefundRefundsAPILinks$inboundSchema: z.ZodType<
  CreateOrderRefundRefundsAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    CreateOrderRefundRefundsAPIDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type CreateOrderRefundRefundsAPILinks$Outbound = {
  documentation?: CreateOrderRefundRefundsAPIDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundRefundsAPILinks$outboundSchema: z.ZodType<
  CreateOrderRefundRefundsAPILinks$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundRefundsAPILinks
> = z.object({
  documentation: z.lazy(() =>
    CreateOrderRefundRefundsAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundRefundsAPILinks$ {
  /** @deprecated use `CreateOrderRefundRefundsAPILinks$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundRefundsAPILinks$inboundSchema;
  /** @deprecated use `CreateOrderRefundRefundsAPILinks$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundRefundsAPILinks$outboundSchema;
  /** @deprecated use `CreateOrderRefundRefundsAPILinks$Outbound` instead. */
  export type Outbound = CreateOrderRefundRefundsAPILinks$Outbound;
}

/** @internal */
export const CreateOrderRefundRefundsAPIResponseBody$inboundSchema: z.ZodType<
  CreateOrderRefundRefundsAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => CreateOrderRefundRefundsAPILinks$inboundSchema)
    .optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new CreateOrderRefundRefundsAPIResponseBody(remapped);
  });

/** @internal */
export type CreateOrderRefundRefundsAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateOrderRefundRefundsAPILinks$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundRefundsAPIResponseBody$outboundSchema: z.ZodType<
  CreateOrderRefundRefundsAPIResponseBody$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundRefundsAPIResponseBody
> = z.instanceof(CreateOrderRefundRefundsAPIResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => CreateOrderRefundRefundsAPILinks$outboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundRefundsAPIResponseBody$ {
  /** @deprecated use `CreateOrderRefundRefundsAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateOrderRefundRefundsAPIResponseBody$inboundSchema;
  /** @deprecated use `CreateOrderRefundRefundsAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateOrderRefundRefundsAPIResponseBody$outboundSchema;
  /** @deprecated use `CreateOrderRefundRefundsAPIResponseBody$Outbound` instead. */
  export type Outbound = CreateOrderRefundRefundsAPIResponseBody$Outbound;
}

/** @internal */
export const CreateOrderRefundDocumentation$inboundSchema: z.ZodType<
  CreateOrderRefundDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type CreateOrderRefundDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateOrderRefundDocumentation$outboundSchema: z.ZodType<
  CreateOrderRefundDocumentation$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundDocumentation$ {
  /** @deprecated use `CreateOrderRefundDocumentation$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundDocumentation$inboundSchema;
  /** @deprecated use `CreateOrderRefundDocumentation$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundDocumentation$outboundSchema;
  /** @deprecated use `CreateOrderRefundDocumentation$Outbound` instead. */
  export type Outbound = CreateOrderRefundDocumentation$Outbound;
}

/** @internal */
export const CreateOrderRefundLinks$inboundSchema: z.ZodType<
  CreateOrderRefundLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => CreateOrderRefundDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateOrderRefundLinks$Outbound = {
  documentation?: CreateOrderRefundDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundLinks$outboundSchema: z.ZodType<
  CreateOrderRefundLinks$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundLinks
> = z.object({
  documentation: z.lazy(() => CreateOrderRefundDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundLinks$ {
  /** @deprecated use `CreateOrderRefundLinks$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundLinks$inboundSchema;
  /** @deprecated use `CreateOrderRefundLinks$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundLinks$outboundSchema;
  /** @deprecated use `CreateOrderRefundLinks$Outbound` instead. */
  export type Outbound = CreateOrderRefundLinks$Outbound;
}

/** @internal */
export const CreateOrderRefundResponseBody$inboundSchema: z.ZodType<
  CreateOrderRefundResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => CreateOrderRefundLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new CreateOrderRefundResponseBody(remapped);
  });

/** @internal */
export type CreateOrderRefundResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateOrderRefundLinks$Outbound | undefined;
};

/** @internal */
export const CreateOrderRefundResponseBody$outboundSchema: z.ZodType<
  CreateOrderRefundResponseBody$Outbound,
  z.ZodTypeDef,
  CreateOrderRefundResponseBody
> = z.instanceof(CreateOrderRefundResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => CreateOrderRefundLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderRefundResponseBody$ {
  /** @deprecated use `CreateOrderRefundResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateOrderRefundResponseBody$inboundSchema;
  /** @deprecated use `CreateOrderRefundResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateOrderRefundResponseBody$outboundSchema;
  /** @deprecated use `CreateOrderRefundResponseBody$Outbound` instead. */
  export type Outbound = CreateOrderRefundResponseBody$Outbound;
}
