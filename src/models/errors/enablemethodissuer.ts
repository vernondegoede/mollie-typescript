/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type EnableMethodIssuerDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type EnableMethodIssuerLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: EnableMethodIssuerDocumentation | undefined;
};

/**
 * An error response object.
 */
export type EnableMethodIssuerResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: EnableMethodIssuerLinks | undefined;
};

/**
 * An error response object.
 */
export class EnableMethodIssuerResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: EnableMethodIssuerLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: EnableMethodIssuerResponseBodyData;

  constructor(err: EnableMethodIssuerResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "EnableMethodIssuerResponseBody";
  }
}

/** @internal */
export const EnableMethodIssuerDocumentation$inboundSchema: z.ZodType<
  EnableMethodIssuerDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type EnableMethodIssuerDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const EnableMethodIssuerDocumentation$outboundSchema: z.ZodType<
  EnableMethodIssuerDocumentation$Outbound,
  z.ZodTypeDef,
  EnableMethodIssuerDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnableMethodIssuerDocumentation$ {
  /** @deprecated use `EnableMethodIssuerDocumentation$inboundSchema` instead. */
  export const inboundSchema = EnableMethodIssuerDocumentation$inboundSchema;
  /** @deprecated use `EnableMethodIssuerDocumentation$outboundSchema` instead. */
  export const outboundSchema = EnableMethodIssuerDocumentation$outboundSchema;
  /** @deprecated use `EnableMethodIssuerDocumentation$Outbound` instead. */
  export type Outbound = EnableMethodIssuerDocumentation$Outbound;
}

/** @internal */
export const EnableMethodIssuerLinks$inboundSchema: z.ZodType<
  EnableMethodIssuerLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => EnableMethodIssuerDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type EnableMethodIssuerLinks$Outbound = {
  documentation?: EnableMethodIssuerDocumentation$Outbound | undefined;
};

/** @internal */
export const EnableMethodIssuerLinks$outboundSchema: z.ZodType<
  EnableMethodIssuerLinks$Outbound,
  z.ZodTypeDef,
  EnableMethodIssuerLinks
> = z.object({
  documentation: z.lazy(() => EnableMethodIssuerDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnableMethodIssuerLinks$ {
  /** @deprecated use `EnableMethodIssuerLinks$inboundSchema` instead. */
  export const inboundSchema = EnableMethodIssuerLinks$inboundSchema;
  /** @deprecated use `EnableMethodIssuerLinks$outboundSchema` instead. */
  export const outboundSchema = EnableMethodIssuerLinks$outboundSchema;
  /** @deprecated use `EnableMethodIssuerLinks$Outbound` instead. */
  export type Outbound = EnableMethodIssuerLinks$Outbound;
}

/** @internal */
export const EnableMethodIssuerResponseBody$inboundSchema: z.ZodType<
  EnableMethodIssuerResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => EnableMethodIssuerLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new EnableMethodIssuerResponseBody(remapped);
  });

/** @internal */
export type EnableMethodIssuerResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: EnableMethodIssuerLinks$Outbound | undefined;
};

/** @internal */
export const EnableMethodIssuerResponseBody$outboundSchema: z.ZodType<
  EnableMethodIssuerResponseBody$Outbound,
  z.ZodTypeDef,
  EnableMethodIssuerResponseBody
> = z.instanceof(EnableMethodIssuerResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => EnableMethodIssuerLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnableMethodIssuerResponseBody$ {
  /** @deprecated use `EnableMethodIssuerResponseBody$inboundSchema` instead. */
  export const inboundSchema = EnableMethodIssuerResponseBody$inboundSchema;
  /** @deprecated use `EnableMethodIssuerResponseBody$outboundSchema` instead. */
  export const outboundSchema = EnableMethodIssuerResponseBody$outboundSchema;
  /** @deprecated use `EnableMethodIssuerResponseBody$Outbound` instead. */
  export type Outbound = EnableMethodIssuerResponseBody$Outbound;
}
