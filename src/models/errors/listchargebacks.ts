/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListChargebacksChargebacksAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListChargebacksChargebacksAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListChargebacksChargebacksAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListChargebacksChargebacksAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListChargebacksChargebacksAPILinks | undefined;
};

/**
 * An error response object.
 */
export class ListChargebacksChargebacksAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListChargebacksChargebacksAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListChargebacksChargebacksAPIResponseBodyData;

  constructor(err: ListChargebacksChargebacksAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListChargebacksChargebacksAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type ListChargebacksDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type ListChargebacksLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: ListChargebacksDocumentation | undefined;
};

/**
 * An error response object.
 */
export type ListChargebacksResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListChargebacksLinks | undefined;
};

/**
 * An error response object.
 */
export class ListChargebacksResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: ListChargebacksLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListChargebacksResponseBodyData;

  constructor(err: ListChargebacksResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "ListChargebacksResponseBody";
  }
}

/** @internal */
export const ListChargebacksChargebacksAPIDocumentation$inboundSchema:
  z.ZodType<ListChargebacksChargebacksAPIDocumentation, z.ZodTypeDef, unknown> =
    z.object({
      href: z.any(),
      type: z.any(),
    });

/** @internal */
export type ListChargebacksChargebacksAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListChargebacksChargebacksAPIDocumentation$outboundSchema:
  z.ZodType<
    ListChargebacksChargebacksAPIDocumentation$Outbound,
    z.ZodTypeDef,
    ListChargebacksChargebacksAPIDocumentation
  > = z.object({
    href: z.any(),
    type: z.any(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChargebacksChargebacksAPIDocumentation$ {
  /** @deprecated use `ListChargebacksChargebacksAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    ListChargebacksChargebacksAPIDocumentation$inboundSchema;
  /** @deprecated use `ListChargebacksChargebacksAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    ListChargebacksChargebacksAPIDocumentation$outboundSchema;
  /** @deprecated use `ListChargebacksChargebacksAPIDocumentation$Outbound` instead. */
  export type Outbound = ListChargebacksChargebacksAPIDocumentation$Outbound;
}

/** @internal */
export const ListChargebacksChargebacksAPILinks$inboundSchema: z.ZodType<
  ListChargebacksChargebacksAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    ListChargebacksChargebacksAPIDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type ListChargebacksChargebacksAPILinks$Outbound = {
  documentation?:
    | ListChargebacksChargebacksAPIDocumentation$Outbound
    | undefined;
};

/** @internal */
export const ListChargebacksChargebacksAPILinks$outboundSchema: z.ZodType<
  ListChargebacksChargebacksAPILinks$Outbound,
  z.ZodTypeDef,
  ListChargebacksChargebacksAPILinks
> = z.object({
  documentation: z.lazy(() =>
    ListChargebacksChargebacksAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChargebacksChargebacksAPILinks$ {
  /** @deprecated use `ListChargebacksChargebacksAPILinks$inboundSchema` instead. */
  export const inboundSchema = ListChargebacksChargebacksAPILinks$inboundSchema;
  /** @deprecated use `ListChargebacksChargebacksAPILinks$outboundSchema` instead. */
  export const outboundSchema =
    ListChargebacksChargebacksAPILinks$outboundSchema;
  /** @deprecated use `ListChargebacksChargebacksAPILinks$Outbound` instead. */
  export type Outbound = ListChargebacksChargebacksAPILinks$Outbound;
}

/** @internal */
export const ListChargebacksChargebacksAPIResponseBody$inboundSchema: z.ZodType<
  ListChargebacksChargebacksAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListChargebacksChargebacksAPILinks$inboundSchema)
    .optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListChargebacksChargebacksAPIResponseBody(remapped);
  });

/** @internal */
export type ListChargebacksChargebacksAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListChargebacksChargebacksAPILinks$Outbound | undefined;
};

/** @internal */
export const ListChargebacksChargebacksAPIResponseBody$outboundSchema:
  z.ZodType<
    ListChargebacksChargebacksAPIResponseBody$Outbound,
    z.ZodTypeDef,
    ListChargebacksChargebacksAPIResponseBody
  > = z.instanceof(ListChargebacksChargebacksAPIResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        status: z.number().int().optional(),
        title: z.string().optional(),
        detail: z.string().optional(),
        field: z.nullable(z.string()).optional(),
        links: z.lazy(() => ListChargebacksChargebacksAPILinks$outboundSchema)
          .optional(),
      }).transform((v) => {
        return remap$(v, {
          links: "_links",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChargebacksChargebacksAPIResponseBody$ {
  /** @deprecated use `ListChargebacksChargebacksAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ListChargebacksChargebacksAPIResponseBody$inboundSchema;
  /** @deprecated use `ListChargebacksChargebacksAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListChargebacksChargebacksAPIResponseBody$outboundSchema;
  /** @deprecated use `ListChargebacksChargebacksAPIResponseBody$Outbound` instead. */
  export type Outbound = ListChargebacksChargebacksAPIResponseBody$Outbound;
}

/** @internal */
export const ListChargebacksDocumentation$inboundSchema: z.ZodType<
  ListChargebacksDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type ListChargebacksDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const ListChargebacksDocumentation$outboundSchema: z.ZodType<
  ListChargebacksDocumentation$Outbound,
  z.ZodTypeDef,
  ListChargebacksDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChargebacksDocumentation$ {
  /** @deprecated use `ListChargebacksDocumentation$inboundSchema` instead. */
  export const inboundSchema = ListChargebacksDocumentation$inboundSchema;
  /** @deprecated use `ListChargebacksDocumentation$outboundSchema` instead. */
  export const outboundSchema = ListChargebacksDocumentation$outboundSchema;
  /** @deprecated use `ListChargebacksDocumentation$Outbound` instead. */
  export type Outbound = ListChargebacksDocumentation$Outbound;
}

/** @internal */
export const ListChargebacksLinks$inboundSchema: z.ZodType<
  ListChargebacksLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => ListChargebacksDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type ListChargebacksLinks$Outbound = {
  documentation?: ListChargebacksDocumentation$Outbound | undefined;
};

/** @internal */
export const ListChargebacksLinks$outboundSchema: z.ZodType<
  ListChargebacksLinks$Outbound,
  z.ZodTypeDef,
  ListChargebacksLinks
> = z.object({
  documentation: z.lazy(() => ListChargebacksDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChargebacksLinks$ {
  /** @deprecated use `ListChargebacksLinks$inboundSchema` instead. */
  export const inboundSchema = ListChargebacksLinks$inboundSchema;
  /** @deprecated use `ListChargebacksLinks$outboundSchema` instead. */
  export const outboundSchema = ListChargebacksLinks$outboundSchema;
  /** @deprecated use `ListChargebacksLinks$Outbound` instead. */
  export type Outbound = ListChargebacksLinks$Outbound;
}

/** @internal */
export const ListChargebacksResponseBody$inboundSchema: z.ZodType<
  ListChargebacksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => ListChargebacksLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new ListChargebacksResponseBody(remapped);
  });

/** @internal */
export type ListChargebacksResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: ListChargebacksLinks$Outbound | undefined;
};

/** @internal */
export const ListChargebacksResponseBody$outboundSchema: z.ZodType<
  ListChargebacksResponseBody$Outbound,
  z.ZodTypeDef,
  ListChargebacksResponseBody
> = z.instanceof(ListChargebacksResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => ListChargebacksLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListChargebacksResponseBody$ {
  /** @deprecated use `ListChargebacksResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListChargebacksResponseBody$inboundSchema;
  /** @deprecated use `ListChargebacksResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListChargebacksResponseBody$outboundSchema;
  /** @deprecated use `ListChargebacksResponseBody$Outbound` instead. */
  export type Outbound = ListChargebacksResponseBody$Outbound;
}
