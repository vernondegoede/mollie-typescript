/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateCaptureCapturesAPIDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateCaptureCapturesAPILinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateCaptureCapturesAPIDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateCaptureCapturesAPIResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateCaptureCapturesAPILinks | undefined;
};

/**
 * An error response object.
 */
export class CreateCaptureCapturesAPIResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateCaptureCapturesAPILinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateCaptureCapturesAPIResponseBodyData;

  constructor(err: CreateCaptureCapturesAPIResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateCaptureCapturesAPIResponseBody";
  }
}

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateCaptureDocumentation = {
  href?: any | undefined;
  type?: any | undefined;
};

export type CreateCaptureLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation?: CreateCaptureDocumentation | undefined;
};

/**
 * An error response object.
 */
export type CreateCaptureResponseBodyData = {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateCaptureLinks | undefined;
};

/**
 * An error response object.
 */
export class CreateCaptureResponseBody extends Error {
  /**
   * The status code of the error message. This is always the same code as the status code of the HTTP message itself.
   */
  status?: number | undefined;
  /**
   * The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
   */
  title?: string | undefined;
  /**
   * A detailed human-readable description of the error that occurred.
   */
  detail?: string | undefined;
  /**
   * If the error was caused by a value provided by you in a specific field, the `field` property will contain the name of the field that caused the issue.
   */
  field?: string | null | undefined;
  links?: CreateCaptureLinks | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateCaptureResponseBodyData;

  constructor(err: CreateCaptureResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.status != null) this.status = err.status;
    if (err.title != null) this.title = err.title;
    if (err.detail != null) this.detail = err.detail;
    if (err.field != null) this.field = err.field;
    if (err.links != null) this.links = err.links;

    this.name = "CreateCaptureResponseBody";
  }
}

/** @internal */
export const CreateCaptureCapturesAPIDocumentation$inboundSchema: z.ZodType<
  CreateCaptureCapturesAPIDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type CreateCaptureCapturesAPIDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateCaptureCapturesAPIDocumentation$outboundSchema: z.ZodType<
  CreateCaptureCapturesAPIDocumentation$Outbound,
  z.ZodTypeDef,
  CreateCaptureCapturesAPIDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCaptureCapturesAPIDocumentation$ {
  /** @deprecated use `CreateCaptureCapturesAPIDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    CreateCaptureCapturesAPIDocumentation$inboundSchema;
  /** @deprecated use `CreateCaptureCapturesAPIDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    CreateCaptureCapturesAPIDocumentation$outboundSchema;
  /** @deprecated use `CreateCaptureCapturesAPIDocumentation$Outbound` instead. */
  export type Outbound = CreateCaptureCapturesAPIDocumentation$Outbound;
}

/** @internal */
export const CreateCaptureCapturesAPILinks$inboundSchema: z.ZodType<
  CreateCaptureCapturesAPILinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    CreateCaptureCapturesAPIDocumentation$inboundSchema
  ).optional(),
});

/** @internal */
export type CreateCaptureCapturesAPILinks$Outbound = {
  documentation?: CreateCaptureCapturesAPIDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateCaptureCapturesAPILinks$outboundSchema: z.ZodType<
  CreateCaptureCapturesAPILinks$Outbound,
  z.ZodTypeDef,
  CreateCaptureCapturesAPILinks
> = z.object({
  documentation: z.lazy(() =>
    CreateCaptureCapturesAPIDocumentation$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCaptureCapturesAPILinks$ {
  /** @deprecated use `CreateCaptureCapturesAPILinks$inboundSchema` instead. */
  export const inboundSchema = CreateCaptureCapturesAPILinks$inboundSchema;
  /** @deprecated use `CreateCaptureCapturesAPILinks$outboundSchema` instead. */
  export const outboundSchema = CreateCaptureCapturesAPILinks$outboundSchema;
  /** @deprecated use `CreateCaptureCapturesAPILinks$Outbound` instead. */
  export type Outbound = CreateCaptureCapturesAPILinks$Outbound;
}

/** @internal */
export const CreateCaptureCapturesAPIResponseBody$inboundSchema: z.ZodType<
  CreateCaptureCapturesAPIResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => CreateCaptureCapturesAPILinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new CreateCaptureCapturesAPIResponseBody(remapped);
  });

/** @internal */
export type CreateCaptureCapturesAPIResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateCaptureCapturesAPILinks$Outbound | undefined;
};

/** @internal */
export const CreateCaptureCapturesAPIResponseBody$outboundSchema: z.ZodType<
  CreateCaptureCapturesAPIResponseBody$Outbound,
  z.ZodTypeDef,
  CreateCaptureCapturesAPIResponseBody
> = z.instanceof(CreateCaptureCapturesAPIResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => CreateCaptureCapturesAPILinks$outboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCaptureCapturesAPIResponseBody$ {
  /** @deprecated use `CreateCaptureCapturesAPIResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateCaptureCapturesAPIResponseBody$inboundSchema;
  /** @deprecated use `CreateCaptureCapturesAPIResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateCaptureCapturesAPIResponseBody$outboundSchema;
  /** @deprecated use `CreateCaptureCapturesAPIResponseBody$Outbound` instead. */
  export type Outbound = CreateCaptureCapturesAPIResponseBody$Outbound;
}

/** @internal */
export const CreateCaptureDocumentation$inboundSchema: z.ZodType<
  CreateCaptureDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.any(),
  type: z.any(),
});

/** @internal */
export type CreateCaptureDocumentation$Outbound = {
  href?: any;
  type?: any;
};

/** @internal */
export const CreateCaptureDocumentation$outboundSchema: z.ZodType<
  CreateCaptureDocumentation$Outbound,
  z.ZodTypeDef,
  CreateCaptureDocumentation
> = z.object({
  href: z.any(),
  type: z.any(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCaptureDocumentation$ {
  /** @deprecated use `CreateCaptureDocumentation$inboundSchema` instead. */
  export const inboundSchema = CreateCaptureDocumentation$inboundSchema;
  /** @deprecated use `CreateCaptureDocumentation$outboundSchema` instead. */
  export const outboundSchema = CreateCaptureDocumentation$outboundSchema;
  /** @deprecated use `CreateCaptureDocumentation$Outbound` instead. */
  export type Outbound = CreateCaptureDocumentation$Outbound;
}

/** @internal */
export const CreateCaptureLinks$inboundSchema: z.ZodType<
  CreateCaptureLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => CreateCaptureDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateCaptureLinks$Outbound = {
  documentation?: CreateCaptureDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateCaptureLinks$outboundSchema: z.ZodType<
  CreateCaptureLinks$Outbound,
  z.ZodTypeDef,
  CreateCaptureLinks
> = z.object({
  documentation: z.lazy(() => CreateCaptureDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCaptureLinks$ {
  /** @deprecated use `CreateCaptureLinks$inboundSchema` instead. */
  export const inboundSchema = CreateCaptureLinks$inboundSchema;
  /** @deprecated use `CreateCaptureLinks$outboundSchema` instead. */
  export const outboundSchema = CreateCaptureLinks$outboundSchema;
  /** @deprecated use `CreateCaptureLinks$Outbound` instead. */
  export type Outbound = CreateCaptureLinks$Outbound;
}

/** @internal */
export const CreateCaptureResponseBody$inboundSchema: z.ZodType<
  CreateCaptureResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.number().int().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  field: z.nullable(z.string()).optional(),
  _links: z.lazy(() => CreateCaptureLinks$inboundSchema).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_links": "links",
    });

    return new CreateCaptureResponseBody(remapped);
  });

/** @internal */
export type CreateCaptureResponseBody$Outbound = {
  status?: number | undefined;
  title?: string | undefined;
  detail?: string | undefined;
  field?: string | null | undefined;
  _links?: CreateCaptureLinks$Outbound | undefined;
};

/** @internal */
export const CreateCaptureResponseBody$outboundSchema: z.ZodType<
  CreateCaptureResponseBody$Outbound,
  z.ZodTypeDef,
  CreateCaptureResponseBody
> = z.instanceof(CreateCaptureResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      status: z.number().int().optional(),
      title: z.string().optional(),
      detail: z.string().optional(),
      field: z.nullable(z.string()).optional(),
      links: z.lazy(() => CreateCaptureLinks$outboundSchema).optional(),
    }).transform((v) => {
      return remap$(v, {
        links: "_links",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCaptureResponseBody$ {
  /** @deprecated use `CreateCaptureResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateCaptureResponseBody$inboundSchema;
  /** @deprecated use `CreateCaptureResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateCaptureResponseBody$outboundSchema;
  /** @deprecated use `CreateCaptureResponseBody$Outbound` instead. */
  export type Outbound = CreateCaptureResponseBody$Outbound;
}
