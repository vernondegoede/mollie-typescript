/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { capturesAPICreateCapture } from "../funcs/capturesAPICreateCapture.js";
import { capturesAPIGetCapture } from "../funcs/capturesAPIGetCapture.js";
import { capturesAPIListCaptures } from "../funcs/capturesAPIListCaptures.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CapturesAPI extends ClientSDK {
  /**
   * Create capture
   *
   * @remarks
   * **This feature is currently in open beta. The final specification may still change.**
   *
   * Capture an *authorized* payment.
   *
   * Some payment methods allow you to first collect a customer's authorization, and capture the amount at a later point.
   *
   * By default, Mollie captures payments automatically. If however you configured your payment with `captureMode: manual`, you can capture the payment using this endpoint after having collected the customer's authorization.
   */
  async createCapture(
    request: operations.CreateCaptureRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(capturesAPICreateCapture(
      this,
      request,
      options,
    ));
  }

  /**
   * List captures
   *
   * @remarks
   * Retrieve a list of all captures created for a specific payment.
   *
   * The results are paginated.
   */
  async listCaptures(
    request: operations.ListCapturesRequest,
    options?: RequestOptions,
  ): Promise<operations.ListCapturesResponseBody> {
    return unwrapAsync(capturesAPIListCaptures(
      this,
      request,
      options,
    ));
  }

  /**
   * Get capture
   *
   * @remarks
   * Retrieve a single payment capture by its ID and the ID of its parent payment.
   */
  async getCapture(
    request: operations.GetCaptureRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCaptureResponseBody> {
    return unwrapAsync(capturesAPIGetCapture(
      this,
      request,
      options,
    ));
  }
}
